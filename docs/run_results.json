{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2023-11-20T20:13:38.533416Z", "invocation_id": "0627eca0-0050-453d-a943-2f8a4bad4870", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:12:57.406034Z", "completed_at": "2023-11-20T20:13:06.831370Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:06.833096Z", "completed_at": "2023-11-20T20:13:06.833105Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 10.126690864562988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"created_at\",\n  \"name\",\n  \"updated_at\",\n  \"url\"  \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"group_data\" as group_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__group_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:12:57.393944Z", "completed_at": "2023-11-20T20:13:06.830808Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:06.832530Z", "completed_at": "2023-11-20T20:13:06.832638Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 10.128858089447021, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"time_zone\",\n  \"year\",\n  \"_fivetran_synced\",\n  \"daylight_end_utc\",\n  \"daylight_offset\",\n  \"daylight_start_utc\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"daylight_time_data\" as daylight_time_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__daylight_time_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:12:57.370895Z", "completed_at": "2023-11-20T20:13:06.996469Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:06.997244Z", "completed_at": "2023-11-20T20:13:06.997249Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 10.132696151733398, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"active\",\n  \"brand_url\",\n  \"default\",\n  \"has_help_center\",\n  \"help_center_state\",\n  \"logo_content_type\",\n  \"logo_content_url\",\n  \"logo_deleted\",\n  \"logo_file_name\",\n  \"logo_height\",\n  \"logo_id\",\n  \"logo_inline\",\n  \"logo_mapped_content_url\",\n  \"logo_size\",\n  \"logo_url\",\n  \"logo_width\",\n  \"name\",\n  \"subdomain\",\n  \"url\"  \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"brand_data\" as brand_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__brand_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:12:57.401094Z", "completed_at": "2023-11-20T20:13:07.334035Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:07.334597Z", "completed_at": "2023-11-20T20:13:07.334603Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 10.262594938278198, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nselect \"index\",\n  \"organization_id\",\n  \"_fivetran_synced\",\n  \"domain_name\" \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"domain_name_data\" as domain_name_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__domain_name_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:07.515740Z", "completed_at": "2023-11-20T20:13:10.543230Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:10.543859Z", "completed_at": "2023-11-20T20:13:10.543866Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.356294870376587, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"id\",\n  \"schedule_id\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"end_date\",\n  \"name\",\n  \"start_date\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"schedule_holiday_data\" as schedule_holiday_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_holiday_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:07.633567Z", "completed_at": "2023-11-20T20:13:10.773977Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:10.774610Z", "completed_at": "2023-11-20T20:13:10.774617Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.24521803855896, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"end_time\",\n  \"id\",\n  \"start_time\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"end_time_utc\",\n  \"name\",\n  \"start_time_utc\",\n  \"time_zone\",\n  \"created_at\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"schedule_data\" as schedule_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:07.501824Z", "completed_at": "2023-11-20T20:13:10.889199Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:10.889890Z", "completed_at": "2023-11-20T20:13:10.889894Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 3.731663942337036, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nselect \"organization_id\",\n  \"tag\",\n  \"_fivetran_synced\"  \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"organization_tag_data\" as organization_tag_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:07.510270Z", "completed_at": "2023-11-20T20:13:10.880105Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:10.887725Z", "completed_at": "2023-11-20T20:13:10.887741Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.7384941577911377, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"created_at\",\n  \"details\",\n  \"external_id\",\n  \"group_id\",\n  \"name\",\n  \"notes\",\n  \"shared_comments\",\n  \"shared_tickets\",\n  \"updated_at\",\n  \"url\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"organization_data\" as organization_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:10.869944Z", "completed_at": "2023-11-20T20:13:13.130524Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:13.131476Z", "completed_at": "2023-11-20T20:13:13.131482Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4577229022979736, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"body\",\n  \"created\",\n  \"facebook_comment\",\n  \"public\",\n  \"ticket_id\",\n  \"tweet\",\n  \"user_id\",\n  \"voice_comment\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"ticket_comment_data\" as ticket_comment_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_comment_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:10.881393Z", "completed_at": "2023-11-20T20:13:13.129484Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:13.130224Z", "completed_at": "2023-11-20T20:13:13.130258Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 2.448657989501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history_tmp", "compiled": true, "compiled_code": "select \"field_name\",\n  \"ticket_id\",\n  \"updated\",\n  \"_fivetran_synced\",\n  \"user_id\",\n  \"value\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"ticket_field_history_data\" as ticket_field_history_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_field_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:11.233774Z", "completed_at": "2023-11-20T20:13:13.896637Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:13.897281Z", "completed_at": "2023-11-20T20:13:13.897291Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.973500967025757, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nselect \"id\",\n  \"updated_at\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"active\",\n  \"created_at\",\n  \"display_name\",\n  \"end_user_visible\",\n  \"name\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"ticket_form_history_data\" as ticket_form_history_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_form_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:11.241685Z", "completed_at": "2023-11-20T20:13:13.897588Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:13.898507Z", "completed_at": "2023-11-20T20:13:13.898522Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 2.966125965118408, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\n\n\nselect \"created_at\",\n  \"ticket_id\",\n  \"_fivetran_synced\",\n  \"schedule_id\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"ticket_schedule_data\" as ticket_schedule_table\n\n", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_schedule_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:13.339414Z", "completed_at": "2023-11-20T20:13:16.410527Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.411289Z", "completed_at": "2023-11-20T20:13:16.411295Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.347372055053711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"allow_channelback\",\n  \"assignee_id\",\n  \"brand_id\",\n  \"created_at\",\n  \"description\",\n  \"due_at\",\n  \"external_id\",\n  \"forum_topic_id\",\n  \"group_id\",\n  \"has_incidents\",\n  \"is_public\",\n  \"organization_id\",\n  \"priority\",\n  \"problem_id\",\n  \"recipient\",\n  \"requester_id\",\n  \"status\",\n  \"subject\",\n  \"submitter_id\",\n  \"system_client\",\n  \"ticket_form_id\",\n  \"type\",\n  \"updated_at\",\n  \"url\",\n  \"via_channel\",\n  \"via_source_from_id\",\n  \"via_source_from_title\",\n  \"via_source_rel\",\n  \"via_source_to_address\",\n  \"via_source_to_name\",\n  \"merged_ticket_ids\",\n  \"via_source_from_address\",\n  \"followup_ids\",\n  \"via_followup_source_id\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"ticket_data\" as ticket_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:13.333309Z", "completed_at": "2023-11-20T20:13:16.325206Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.325852Z", "completed_at": "2023-11-20T20:13:16.325869Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.3496251106262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag_tmp", "compiled": true, "compiled_code": "select \"tag\",\n  \"ticket_id\",\n  \"_fivetran_synced\"\nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"ticket_tag_data\" as ticket_tag_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.691557Z", "completed_at": "2023-11-20T20:13:16.693436Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.695041Z", "completed_at": "2023-11-20T20:13:16.695050Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011694908142089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.brand_data_postgres", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.697164Z", "completed_at": "2023-11-20T20:13:16.698180Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.699023Z", "completed_at": "2023-11-20T20:13:16.699028Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0029706954956054688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.daylight_time_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.700723Z", "completed_at": "2023-11-20T20:13:16.701960Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.702576Z", "completed_at": "2023-11-20T20:13:16.702580Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003116130828857422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.domain_name_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.704858Z", "completed_at": "2023-11-20T20:13:16.705916Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.706389Z", "completed_at": "2023-11-20T20:13:16.706394Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0026731491088867188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.group_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.708125Z", "completed_at": "2023-11-20T20:13:16.709683Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.710160Z", "completed_at": "2023-11-20T20:13:16.710164Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.003170013427734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.711674Z", "completed_at": "2023-11-20T20:13:16.712627Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.713060Z", "completed_at": "2023-11-20T20:13:16.713064Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0022978782653808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.714577Z", "completed_at": "2023-11-20T20:13:16.715547Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.715983Z", "completed_at": "2023-11-20T20:13:16.715987Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0023550987243652344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.717574Z", "completed_at": "2023-11-20T20:13:16.718526Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.718986Z", "completed_at": "2023-11-20T20:13:16.718990Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0024368762969970703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_holiday_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.720490Z", "completed_at": "2023-11-20T20:13:16.721443Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.721876Z", "completed_at": "2023-11-20T20:13:16.721879Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002311229705810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.723347Z", "completed_at": "2023-11-20T20:13:16.724300Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.724735Z", "completed_at": "2023-11-20T20:13:16.724739Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002307891845703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.726236Z", "completed_at": "2023-11-20T20:13:16.727756Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.728196Z", "completed_at": "2023-11-20T20:13:16.728200Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0029299259185791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_field_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.729814Z", "completed_at": "2023-11-20T20:13:16.730710Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.731141Z", "completed_at": "2023-11-20T20:13:16.731145Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002332925796508789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_form_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.732660Z", "completed_at": "2023-11-20T20:13:16.733568Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.733993Z", "completed_at": "2023-11-20T20:13:16.733997Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0022978782653808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.735408Z", "completed_at": "2023-11-20T20:13:16.736282Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.736688Z", "completed_at": "2023-11-20T20:13:16.736692Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0021572113037109375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.738052Z", "completed_at": "2023-11-20T20:13:16.738949Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.739365Z", "completed_at": "2023-11-20T20:13:16.739368Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0021772384643554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.time_zone_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.740730Z", "completed_at": "2023-11-20T20:13:16.742219Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.742646Z", "completed_at": "2023-11-20T20:13:16.742649Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.002778291702270508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.744166Z", "completed_at": "2023-11-20T20:13:16.791083Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.791808Z", "completed_at": "2023-11-20T20:13:16.791816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04885101318359375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:14.214888Z", "completed_at": "2023-11-20T20:13:16.871842Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.873190Z", "completed_at": "2023-11-20T20:13:16.873198Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 2.816159963607788, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nselect \"tag\",\n  \"user_id\",\n  \"_fivetran_synced\"  \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"user_tag_data\" as user_tag_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:14.210405Z", "completed_at": "2023-11-20T20:13:16.872201Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:16.873442Z", "completed_at": "2023-11-20T20:13:16.873445Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 2.8175859451293945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"time_zone\",\n  \"_fivetran_synced\",\n  \"standard_offset\" \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"time_zone_data\" as time_zone_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__time_zone_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.685926Z", "completed_at": "2023-11-20T20:13:21.649919Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:21.651413Z", "completed_at": "2023-11-20T20:13:21.651419Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 5.934238910675049, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"active\",\n  \"alias\",\n  \"authenticity_token\",\n  \"chat_only\",\n  \"created_at\",\n  \"details\",\n  \"email\",\n  \"external_id\",\n  \"last_login_at\",\n  \"locale\",\n  \"locale_id\",\n  \"moderator\",\n  \"name\",\n  \"notes\",\n  \"only_private_comments\",\n  \"organization_id\",\n  \"phone\",\n  \"remote_photo_url\",\n  \"restricted_agent\",\n  \"role\",\n  \"shared\",\n  \"shared_agent\",\n  \"signature\",\n  \"suspended\",\n  \"ticket_restriction\",\n  \"time_zone\",\n  \"two_factor_auth_enabled\",\n  \"updated_at\",\n  \"url\",\n  \"verified\"   \nfrom \"postgres\".\"zendesk_source_integrations_tests_5\".\"user_data\" as user_table", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:16.793914Z", "completed_at": "2023-11-20T20:13:21.649635Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:21.650980Z", "completed_at": "2023-11-20T20:13:21.650993Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.825643062591553, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__group_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as group_id,\n        name\n    from fields\n    \n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__group\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:17.035830Z", "completed_at": "2023-11-20T20:13:22.944087Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:22.944574Z", "completed_at": "2023-11-20T20:13:22.944578Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 6.505536794662476, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__brand_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    brand_url\n    \n as \n    \n    brand_url\n    \n, \n    \n    \n    has_help_center\n    \n as \n    \n    has_help_center\n    \n, \n    \n    \n    help_center_state\n    \n as \n    \n    help_center_state\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    logo_content_type\n    \n as \n    \n    logo_content_type\n    \n, \n    \n    \n    logo_content_url\n    \n as \n    \n    logo_content_url\n    \n, \n    \n    \n    logo_deleted\n    \n as \n    \n    logo_deleted\n    \n, \n    \n    \n    logo_file_name\n    \n as \n    \n    logo_file_name\n    \n, \n    \n    \n    logo_height\n    \n as \n    \n    logo_height\n    \n, \n    \n    \n    logo_id\n    \n as \n    \n    logo_id\n    \n, \n    \n    \n    logo_inline\n    \n as \n    \n    logo_inline\n    \n, \n    \n    \n    logo_mapped_content_url\n    \n as \n    \n    logo_mapped_content_url\n    \n, \n    \n    \n    logo_size\n    \n as \n    \n    logo_size\n    \n, \n    \n    \n    logo_url\n    \n as \n    \n    logo_url\n    \n, \n    \n    \n    logo_width\n    \n as \n    \n    logo_width\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subdomain\n    \n as \n    \n    subdomain\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as brand_id,\n        brand_url,\n        name,\n        subdomain,\n        active as is_active\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__brand\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:17.030145Z", "completed_at": "2023-11-20T20:13:22.942692Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:22.943515Z", "completed_at": "2023-11-20T20:13:22.943522Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 6.507907867431641, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__daylight_time_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    daylight_end_utc\n    \n as \n    \n    daylight_end_utc\n    \n, \n    \n    \n    daylight_offset\n    \n as \n    \n    daylight_offset\n    \n, \n    \n    \n    daylight_start_utc\n    \n as \n    \n    daylight_start_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    year\n    \n as \n    \n    year\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        daylight_end_utc,\n        daylight_offset,\n        daylight_start_utc,\n        time_zone,\n        year,\n        daylight_offset * 60 as daylight_offset_minutes\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__daylight_time\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:22.628345Z", "completed_at": "2023-11-20T20:13:25.907932Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:25.908454Z", "completed_at": "2023-11-20T20:13:25.908461Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 3.871142864227295, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_holiday_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp ) as _fivetran_synced,\n        cast(end_date as timestamp ) as holiday_end_date_at,\n        cast(id as TEXT ) as holiday_id,\n        name as holiday_name,\n        cast(schedule_id as TEXT ) as schedule_id,\n        cast(start_date as timestamp ) as holiday_start_date_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_holiday\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:22.622004Z", "completed_at": "2023-11-20T20:13:26.273520Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:26.274318Z", "completed_at": "2023-11-20T20:13:26.274330Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 3.9263038635253906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__domain_name_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    domain_name\n    \n as \n    \n    domain_name\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        domain_name,\n        index\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__domain_name\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:23.538682Z", "completed_at": "2023-11-20T20:13:27.102980Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:27.103514Z", "completed_at": "2023-11-20T20:13:27.103521Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 3.8492159843444824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    end_time_utc\n    \n as \n    \n    end_time_utc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    start_time_utc\n    \n as \n    \n    start_time_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as TEXT) as schedule_id, --need to convert from numeric to string for downstream models to work properly\n        end_time,\n        start_time,\n        name as schedule_name,\n        created_at,\n        time_zone\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:23.543453Z", "completed_at": "2023-11-20T20:13:27.015941Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:27.016463Z", "completed_at": "2023-11-20T20:13:27.016470Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.848504066467285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization_tag_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization_tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:26.550658Z", "completed_at": "2023-11-20T20:13:28.790365Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:28.790881Z", "completed_at": "2023-11-20T20:13:28.790886Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 2.4141759872436523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_comment_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    cast(null as integer) as \n    \n    call_duration\n    \n , \n    cast(null as integer) as \n    \n    call_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    facebook_comment\n    \n as \n    \n    facebook_comment\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as integer) as \n    \n    location\n    \n , \n    \n    \n    public\n    \n as \n    \n    public\n    \n, \n    cast(null as integer) as \n    \n    recording_url\n    \n , \n    cast(null as timestamp) as \n    \n    started_at\n    \n , \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    cast(null as integer) as \n    \n    transcription_status\n    \n , \n    cast(null as integer) as \n    \n    transcription_text\n    \n , \n    cast(null as integer) as \n    \n    trusted\n    \n , \n    \n    \n    tweet\n    \n as \n    \n    tweet\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    voice_comment\n    \n as \n    \n    voice_comment\n    \n, \n    cast(null as integer) as \n    \n    voice_comment_transcription_visible\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_comment_id,\n        _fivetran_synced,\n        body,\n        created as created_at,\n        \n        public as is_public,\n        ticket_id,\n        user_id,\n        facebook_comment as is_facebook_comment,\n        tweet as is_tweet,\n        voice_comment as is_voice_comment\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_comment\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:26.495436Z", "completed_at": "2023-11-20T20:13:28.768017Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:28.768697Z", "completed_at": "2023-11-20T20:13:28.768712Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 2.4706640243530273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    shared_comments\n    \n as \n    \n    shared_comments\n    \n, \n    \n    \n    shared_tickets\n    \n as \n    \n    shared_tickets\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        created_at,\n        updated_at,\n        details,\n        name,\n        external_id\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:27.393453Z", "completed_at": "2023-11-20T20:13:29.116555Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:29.117889Z", "completed_at": "2023-11-20T20:13:29.117899Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.8390541076660156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_form_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    end_user_visible\n    \n as \n    \n    end_user_visible\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_form_id,\n        created_at,\n            updated_at,\n        \n        display_name,\n        active as is_active,\n        name\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n    \n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_form_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:27.389259Z", "completed_at": "2023-11-20T20:13:29.117581Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:29.119085Z", "completed_at": "2023-11-20T20:13:29.119100Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.8413639068603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_field_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    field_name\n    \n as \n    \n    field_name\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        field_name,\n        updated as valid_starting_at,\n            lead(updated) over (partition by ticket_id, field_name order by updated) as valid_ending_at,\n        \n        value,\n        user_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_field_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:28.967928Z", "completed_at": "2023-11-20T20:13:32.946581Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:32.947056Z", "completed_at": "2023-11-20T20:13:32.947063Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 4.679007053375244, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_schedule_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        created_at,\n        \n        cast(schedule_id as TEXT) as schedule_id --need to convert from numeric to string for downstream models to work properly\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_schedule\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:29.231845Z", "completed_at": "2023-11-20T20:13:33.645965Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:33.649400Z", "completed_at": "2023-11-20T20:13:33.649408Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 5.186162233352661, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_tag_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        \n        tag as tags\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:29.238497Z", "completed_at": "2023-11-20T20:13:33.620199Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:33.646523Z", "completed_at": "2023-11-20T20:13:33.646528Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 5.185840845108032, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user_tag_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        user_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user_tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:28.972731Z", "completed_at": "2023-11-20T20:13:33.647492Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:33.650140Z", "completed_at": "2023-11-20T20:13:33.650143Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 5.451663255691528, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allow_channelback\n    \n as \n    \n    allow_channelback\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_at\n    \n as \n    \n    due_at\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    forum_topic_id\n    \n as \n    \n    forum_topic_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    has_incidents\n    \n as \n    \n    has_incidents\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_public\n    \n as \n    \n    is_public\n    \n, \n    \n    \n    merged_ticket_ids\n    \n as \n    \n    merged_ticket_ids\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    problem_id\n    \n as \n    \n    problem_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    requester_id\n    \n as \n    \n    requester_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    submitter_id\n    \n as \n    \n    submitter_id\n    \n, \n    cast(null as integer) as \n    \n    system_ccs\n    \n , \n    \n    \n    system_client\n    \n as \n    \n    system_client\n    \n, \n    cast(null as TEXT) as \n    \n    system_ip_address\n    \n , \n    cast(null as integer) as \n    \n    system_json_email_identifier\n    \n , \n    cast(null as float) as \n    \n    system_latitude\n    \n , \n    cast(null as TEXT) as \n    \n    system_location\n    \n , \n    cast(null as float) as \n    \n    system_longitude\n    \n , \n    cast(null as integer) as \n    \n    system_machine_generated\n    \n , \n    cast(null as integer) as \n    \n    system_message_id\n    \n , \n    cast(null as integer) as \n    \n    system_raw_email_identifier\n    \n , \n    \n    \n    ticket_form_id\n    \n as \n    \n    ticket_form_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    via_channel\n    \n as \n    \n    via_channel\n    \n, \n    \n    \n    via_source_from_address\n    \n as \n    \n    via_source_from_address\n    \n, \n    \n    \n    via_source_from_id\n    \n as \n    \n    via_source_from_id\n    \n, \n    \n    \n    via_source_from_title\n    \n as \n    \n    via_source_from_title\n    \n, \n    \n    \n    via_source_rel\n    \n as \n    \n    via_source_rel\n    \n, \n    \n    \n    via_source_to_address\n    \n as \n    \n    via_source_to_address\n    \n, \n    \n    \n    via_source_to_name\n    \n as \n    \n    via_source_to_name\n    \n\n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_id,\n        _fivetran_synced,\n        assignee_id,\n        brand_id,\n        created_at,\n            updated_at,\n        \n        description,\n        due_at,\n        group_id,\n        external_id,\n        is_public,\n        organization_id,\n        priority,\n        recipient,\n        requester_id,\n        status,\n        subject,\n        problem_id,\n        submitter_id,\n        ticket_form_id,\n        type,\n        url,\n        via_channel as created_channel,\n        via_source_from_id as source_from_id,\n        via_source_from_title as source_from_title,\n        via_source_rel as source_rel,\n        via_source_to_address as source_to_address,\n        via_source_to_name as source_to_name\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.439391Z", "completed_at": "2023-11-20T20:13:34.444788Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.446103Z", "completed_at": "2023-11-20T20:13:34.446117Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.025722980499267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__group_group_id.f0658dabcd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    group_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__group\"\nwhere group_id is not null\ngroup by group_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.428458Z", "completed_at": "2023-11-20T20:13:34.445170Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.446500Z", "completed_at": "2023-11-20T20:13:34.446504Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.027380943298339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__group_group_id.7659ed83ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect group_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__group\"\nwhere group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.450936Z", "completed_at": "2023-11-20T20:13:34.458617Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.459942Z", "completed_at": "2023-11-20T20:13:34.459948Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011717081069946289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__brand_brand_id.a2419e1741", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect brand_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__brand\"\nwhere brand_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.454137Z", "completed_at": "2023-11-20T20:13:34.459548Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.461311Z", "completed_at": "2023-11-20T20:13:34.461318Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012559175491333008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__brand_brand_id.fdf8e23c9e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    brand_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__brand\"\nwhere brand_id is not null\ngroup by brand_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.464480Z", "completed_at": "2023-11-20T20:13:34.474978Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.475898Z", "completed_at": "2023-11-20T20:13:34.475905Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.013998031616210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.dbt_utils_unique_combination_of_columns_stg_zendesk__daylight_time_time_zone__year.88227aef3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        time_zone, year\n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__daylight_time\"\n    group by time_zone, year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.472093Z", "completed_at": "2023-11-20T20:13:34.475611Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.476966Z", "completed_at": "2023-11-20T20:13:34.476970Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013589143753051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__schedule_holiday_holiday_id.52eb08f782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_holiday\"\nwhere holiday_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.479467Z", "completed_at": "2023-11-20T20:13:34.485006Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.485607Z", "completed_at": "2023-11-20T20:13:34.485612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008287906646728516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__schedule_holiday_holiday_id.0341d5635a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    holiday_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__schedule_holiday\"\nwhere holiday_id is not null\ngroup by holiday_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.482512Z", "completed_at": "2023-11-20T20:13:34.485834Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.487238Z", "completed_at": "2023-11-20T20:13:34.487246Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00916600227355957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__domain_name_organization_id.a2b5ff8fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__domain_name\"\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.489148Z", "completed_at": "2023-11-20T20:13:34.495718Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.496396Z", "completed_at": "2023-11-20T20:13:34.496402Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009273052215576172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_comment_ticket_comment_id.b821f4a606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_comment_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_comment\"\nwhere ticket_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.492625Z", "completed_at": "2023-11-20T20:13:34.497113Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.498200Z", "completed_at": "2023-11-20T20:13:34.498204Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007090091705322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_comment_ticket_comment_id.ba353330cd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ticket_comment_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_comment\"\nwhere ticket_comment_id is not null\ngroup by ticket_comment_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.499238Z", "completed_at": "2023-11-20T20:13:34.502779Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.505899Z", "completed_at": "2023-11-20T20:13:34.505904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008517026901245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__organization_organization_id.de7b98c06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization\"\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.503055Z", "completed_at": "2023-11-20T20:13:34.506696Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.507843Z", "completed_at": "2023-11-20T20:13:34.507847Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006427764892578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__organization_organization_id.152be1ab31", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    organization_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__organization\"\nwhere organization_id is not null\ngroup by organization_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.508922Z", "completed_at": "2023-11-20T20:13:34.512472Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.515486Z", "completed_at": "2023-11-20T20:13:34.515491Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00846409797668457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_form_history_ticket_form_id.1afe781a17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_form_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket_form_history\"\nwhere ticket_form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.512746Z", "completed_at": "2023-11-20T20:13:34.516549Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.517684Z", "completed_at": "2023-11-20T20:13:34.517690Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008738040924072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_ticket_id.a8229e6981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket\"\nwhere ticket_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.517999Z", "completed_at": "2023-11-20T20:13:34.521106Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:34.521583Z", "completed_at": "2023-11-20T20:13:34.521587Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.005155801773071289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_ticket_id.4be7124521", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ticket_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__ticket\"\nwhere ticket_id is not null\ngroup by ticket_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:33.650825Z", "completed_at": "2023-11-20T20:13:37.586087Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:37.586981Z", "completed_at": "2023-11-20T20:13:37.587001Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 4.484333038330078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__time_zone_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    standard_offset\n    \n as \n    \n    standard_offset\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        standard_offset,\n        time_zone,\n        -- the standard_offset is a string written as [+/-]HH:MM\n        -- let's convert it to an integer value of minutes\n        cast( \n\n  \n    \n\n    split_part(\n        standard_offset,\n        ':',\n        1\n        )\n\n\n  \n\n as integer ) * 60 +\n            (cast( \n\n  \n    \n\n    split_part(\n        standard_offset,\n        ':',\n        2\n        )\n\n\n  \n\n as integer ) *\n                (case when standard_offset like '-%' then -1 else 1 end) ) as standard_offset_minutes\n    \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__time_zone\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:38.137020Z", "completed_at": "2023-11-20T20:13:38.216943Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:38.218823Z", "completed_at": "2023-11-20T20:13:38.218834Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.08531975746154785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__time_zone_time_zone.b25b3452b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_zone\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__time_zone\"\nwhere time_zone is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:38.196229Z", "completed_at": "2023-11-20T20:13:38.218056Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:38.220806Z", "completed_at": "2023-11-20T20:13:38.220809Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08599400520324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__time_zone_time_zone.67995adbaf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    time_zone as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__time_zone\"\nwhere time_zone is not null\ngroup by time_zone\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:34.422176Z", "completed_at": "2023-11-20T20:13:38.217458Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:38.219595Z", "completed_at": "2023-11-20T20:13:38.219602Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 4.096256971359253, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    authenticity_token\n    \n as \n    \n    authenticity_token\n    \n, \n    \n    \n    chat_only\n    \n as \n    \n    chat_only\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_login_at\n    \n as \n    \n    last_login_at\n    \n, \n    \n    \n    locale\n    \n as \n    \n    locale\n    \n, \n    \n    \n    locale_id\n    \n as \n    \n    locale_id\n    \n, \n    \n    \n    moderator\n    \n as \n    \n    moderator\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    only_private_comments\n    \n as \n    \n    only_private_comments\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    remote_photo_url\n    \n as \n    \n    remote_photo_url\n    \n, \n    \n    \n    restricted_agent\n    \n as \n    \n    restricted_agent\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    shared\n    \n as \n    \n    shared\n    \n, \n    \n    \n    shared_agent\n    \n as \n    \n    shared_agent\n    \n, \n    \n    \n    signature\n    \n as \n    \n    signature\n    \n, \n    \n    \n    suspended\n    \n as \n    \n    suspended\n    \n, \n    \n    \n    ticket_restriction\n    \n as \n    \n    ticket_restriction\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    two_factor_auth_enabled\n    \n as \n    \n    two_factor_auth_enabled\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n        \n    from base\n),\n\nfinal as ( \n    \n    select \n        id as user_id,\n        external_id,\n        _fivetran_synced,\n        last_login_at,\n            created_at,\n            updated_at,\n        \n        email,\n        name,\n        organization_id,\n        role,\n        ticket_restriction,\n        time_zone,\n        locale,\n        active as is_active,\n        suspended as is_suspended\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:38.519780Z", "completed_at": "2023-11-20T20:13:38.528232Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:38.529812Z", "completed_at": "2023-11-20T20:13:38.529822Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012491941452026367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__user_user_id.102d572926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-20T20:13:38.523875Z", "completed_at": "2023-11-20T20:13:38.528490Z"}, {"name": "execute", "started_at": "2023-11-20T20:13:38.530246Z", "completed_at": "2023-11-20T20:13:38.530249Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.012481212615966797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__user_user_id.3d3e346b11", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zendesk_source_integrations_tests_5_zendesk_source\".\"stg_zendesk__user\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 65.0377197265625, "args": {"log_level": "info", "quiet": false, "project_dir": "/Users/avinash.kunnath/Documents/dbt_packages/zendesk/dbt_zendesk_source/integration_tests", "target": "postgres", "send_anonymous_usage_stats": true, "print": true, "version_check": true, "defer": false, "log_format": "default", "vars": {}, "show_resource_report": false, "indirect_selection": "eager", "use_colors": true, "partial_parse": true, "compile": true, "enable_legacy_logger": false, "invocation_command": "dbt docs generate -t postgres", "static": false, "favor_state": false, "introspect": true, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "strict_mode": false, "log_level_file": "debug", "macro_debugging": false, "cache_selected_only": false, "log_format_file": "debug", "log_path": "/Users/avinash.kunnath/Documents/dbt_packages/zendesk/dbt_zendesk_source/integration_tests/logs", "use_colors_file": true, "select": [], "exclude": [], "populate_cache": true, "static_parser": true, "partial_parse_file_diff": true, "empty_catalog": false, "which": "generate", "profiles_dir": "/Users/avinash.kunnath/.dbt", "log_file_max_bytes": 10485760, "printer_width": 80}}