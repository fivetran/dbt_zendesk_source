{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.3", "generated_at": "2024-08-16T01:26:52.244047Z", "invocation_id": "7741bb7c-6556-4f42-b7b7-9b6f41f99ee6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.214178Z", "completed_at": "2024-08-16T01:26:48.450931Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.451843Z", "completed_at": "2024-08-16T01:26:48.451869Z"}], "thread_id": "Thread-7", "execution_time": 1.3267159461975098, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"id\",\n  \"schedule_id\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"end_date\",\n  \"name\",\n  \"start_date\"\nfrom \"postgres\".\"zz_zendesk\".\"schedule_holiday_data\" as schedule_holiday_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_holiday_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.202078Z", "completed_at": "2024-08-16T01:26:48.472487Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.474628Z", "completed_at": "2024-08-16T01:26:48.474635Z"}], "thread_id": "Thread-4", "execution_time": 1.3637220859527588, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"created_at\",\n  \"name\",\n  \"updated_at\",\n  \"url\"  \nfrom \"postgres\".\"zz_zendesk\".\"group_data\" as group_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__group_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.206087Z", "completed_at": "2024-08-16T01:26:48.466943Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.470787Z", "completed_at": "2024-08-16T01:26:48.470801Z"}], "thread_id": "Thread-5", "execution_time": 1.37164306640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nselect \"organization_id\",\n  \"tag\",\n  \"_fivetran_synced\"  \nfrom \"postgres\".\"zz_zendesk\".\"organization_tag_data\" as organization_tag_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.155993Z", "completed_at": "2024-08-16T01:26:48.471515Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.472927Z", "completed_at": "2024-08-16T01:26:48.472934Z"}], "thread_id": "Thread-1", "execution_time": 1.4596459865570068, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"active\",\n  \"brand_url\",\n  \"default\",\n  \"has_help_center\",\n  \"help_center_state\",\n  \"logo_content_type\",\n  \"logo_content_url\",\n  \"logo_deleted\",\n  \"logo_file_name\",\n  \"logo_height\",\n  \"logo_id\",\n  \"logo_inline\",\n  \"logo_mapped_content_url\",\n  \"logo_size\",\n  \"logo_url\",\n  \"logo_width\",\n  \"name\",\n  \"subdomain\",\n  \"url\"  \nfrom \"postgres\".\"zz_zendesk\".\"brand_data\" as brand_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__brand_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.210421Z", "completed_at": "2024-08-16T01:26:48.474330Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.475377Z", "completed_at": "2024-08-16T01:26:48.475381Z"}], "thread_id": "Thread-6", "execution_time": 1.4545938968658447, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"created_at\",\n  \"details\",\n  \"external_id\",\n  \"group_id\",\n  \"name\",\n  \"notes\",\n  \"shared_comments\",\n  \"shared_tickets\",\n  \"updated_at\",\n  \"url\"\nfrom \"postgres\".\"zz_zendesk\".\"organization_data\" as organization_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.218509Z", "completed_at": "2024-08-16T01:26:48.471863Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.473655Z", "completed_at": "2024-08-16T01:26:48.473661Z"}], "thread_id": "Thread-8", "execution_time": 1.4204800128936768, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"end_time\",\n  \"id\",\n  \"start_time\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"end_time_utc\",\n  \"name\",\n  \"start_time_utc\",\n  \"time_zone\",\n  \"created_at\"\nfrom \"postgres\".\"zz_zendesk\".\"schedule_data\" as schedule_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.191804Z", "completed_at": "2024-08-16T01:26:48.472154Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.474009Z", "completed_at": "2024-08-16T01:26:48.474014Z"}], "thread_id": "Thread-2", "execution_time": 1.4611179828643799, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"time_zone\",\n  \"year\",\n  \"_fivetran_synced\",\n  \"daylight_end_utc\",\n  \"daylight_offset\",\n  \"daylight_start_utc\"\nfrom \"postgres\".\"zz_zendesk\".\"daylight_time_data\" as daylight_time_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__daylight_time_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:47.197396Z", "completed_at": "2024-08-16T01:26:48.473298Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:48.475000Z", "completed_at": "2024-08-16T01:26:48.475004Z"}], "thread_id": "Thread-3", "execution_time": 1.4592888355255127, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nselect \"index\",\n  \"organization_id\",\n  \"_fivetran_synced\",\n  \"domain_name\" \nfrom \"postgres\".\"zz_zendesk\".\"domain_name_data\" as domain_name_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__domain_name_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.528005Z", "completed_at": "2024-08-16T01:26:49.481491Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.482024Z", "completed_at": "2024-08-16T01:26:49.482029Z"}], "thread_id": "Thread-5", "execution_time": 0.9957273006439209, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nselect \"id\",\n  \"updated_at\",\n  \"_fivetran_deleted\",\n  \"_fivetran_synced\",\n  \"active\",\n  \"created_at\",\n  \"display_name\",\n  \"end_user_visible\",\n  \"name\"\nfrom \"postgres\".\"zz_zendesk\".\"ticket_form_history_data\" as ticket_form_history_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_form_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.496537Z", "completed_at": "2024-08-16T01:26:49.481195Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.481737Z", "completed_at": "2024-08-16T01:26:49.481743Z"}], "thread_id": "Thread-7", "execution_time": 1.0279240608215332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"body\",\n  \"created\",\n  \"facebook_comment\",\n  \"public\",\n  \"ticket_id\",\n  \"tweet\",\n  \"user_id\",\n  \"voice_comment\"\nfrom \"postgres\".\"zz_zendesk\".\"ticket_comment_data\" as ticket_comment_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_comment_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.519411Z", "completed_at": "2024-08-16T01:26:49.482338Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.482623Z", "completed_at": "2024-08-16T01:26:49.482629Z"}], "thread_id": "Thread-4", "execution_time": 1.0232689380645752, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history_tmp", "compiled": true, "compiled_code": "select \"field_name\",\n  \"ticket_id\",\n  \"updated\",\n  \"_fivetran_synced\",\n  \"user_id\",\n  \"value\"\nfrom \"postgres\".\"zz_zendesk\".\"ticket_field_history_data\" as ticket_field_history_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_field_history_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.537088Z", "completed_at": "2024-08-16T01:26:49.539382Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.542480Z", "completed_at": "2024-08-16T01:26:49.542486Z"}], "thread_id": "Thread-7", "execution_time": 0.017101049423217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.brand_data_postgres", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.546824Z", "completed_at": "2024-08-16T01:26:49.548775Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.551974Z", "completed_at": "2024-08-16T01:26:49.551981Z"}], "thread_id": "Thread-4", "execution_time": 0.007379055023193359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.daylight_time_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.549463Z", "completed_at": "2024-08-16T01:26:49.551309Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.554217Z", "completed_at": "2024-08-16T01:26:49.554223Z"}], "thread_id": "Thread-7", "execution_time": 0.009132146835327148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.domain_name_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.563475Z", "completed_at": "2024-08-16T01:26:49.565058Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.568409Z", "completed_at": "2024-08-16T01:26:49.568414Z"}], "thread_id": "Thread-4", "execution_time": 0.04262900352478027, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.group_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.565610Z", "completed_at": "2024-08-16T01:26:49.567858Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.601357Z", "completed_at": "2024-08-16T01:26:49.601362Z"}], "thread_id": "Thread-7", "execution_time": 0.04009819030761719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.603230Z", "completed_at": "2024-08-16T01:26:49.604543Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.606312Z", "completed_at": "2024-08-16T01:26:49.606317Z"}], "thread_id": "Thread-4", "execution_time": 0.0040738582611083984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.604778Z", "completed_at": "2024-08-16T01:26:49.605909Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.606846Z", "completed_at": "2024-08-16T01:26:49.606849Z"}], "thread_id": "Thread-7", "execution_time": 0.004333019256591797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.637914Z", "completed_at": "2024-08-16T01:26:49.545626Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.546517Z", "completed_at": "2024-08-16T01:26:49.546523Z"}], "thread_id": "Thread-2", "execution_time": 0.9908881187438965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"time_zone\",\n  \"_fivetran_synced\",\n  \"standard_offset\" \nfrom \"postgres\".\"zz_zendesk\".\"time_zone_data\" as time_zone_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__time_zone_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.642632Z", "completed_at": "2024-08-16T01:26:49.560980Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.562223Z", "completed_at": "2024-08-16T01:26:49.562228Z"}], "thread_id": "Thread-3", "execution_time": 0.9910299777984619, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nselect \"tag\",\n  \"user_id\",\n  \"_fivetran_synced\"  \nfrom \"postgres\".\"zz_zendesk\".\"user_tag_data\" as user_tag_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.610211Z", "completed_at": "2024-08-16T01:26:49.611378Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.613259Z", "completed_at": "2024-08-16T01:26:49.613263Z"}], "thread_id": "Thread-4", "execution_time": 0.004925966262817383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_holiday_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.611767Z", "completed_at": "2024-08-16T01:26:49.612877Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.614941Z", "completed_at": "2024-08-16T01:26:49.614945Z"}], "thread_id": "Thread-7", "execution_time": 0.006162405014038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.613599Z", "completed_at": "2024-08-16T01:26:49.614747Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.617542Z", "completed_at": "2024-08-16T01:26:49.617545Z"}], "thread_id": "Thread-2", "execution_time": 0.008017301559448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.615269Z", "completed_at": "2024-08-16T01:26:49.617116Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.618095Z", "completed_at": "2024-08-16T01:26:49.618099Z"}], "thread_id": "Thread-3", "execution_time": 0.008144855499267578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_field_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.620098Z", "completed_at": "2024-08-16T01:26:49.621242Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.623145Z", "completed_at": "2024-08-16T01:26:49.623149Z"}], "thread_id": "Thread-4", "execution_time": 0.004778146743774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_form_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.621642Z", "completed_at": "2024-08-16T01:26:49.622760Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.624798Z", "completed_at": "2024-08-16T01:26:49.624802Z"}], "thread_id": "Thread-7", "execution_time": 0.006010293960571289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.623477Z", "completed_at": "2024-08-16T01:26:49.624590Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.626642Z", "completed_at": "2024-08-16T01:26:49.626645Z"}], "thread_id": "Thread-2", "execution_time": 0.00720524787902832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.625135Z", "completed_at": "2024-08-16T01:26:49.626236Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.627199Z", "completed_at": "2024-08-16T01:26:49.627202Z"}], "thread_id": "Thread-3", "execution_time": 0.007359981536865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.time_zone_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.629165Z", "completed_at": "2024-08-16T01:26:49.630301Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.632894Z", "completed_at": "2024-08-16T01:26:49.632898Z"}], "thread_id": "Thread-4", "execution_time": 0.00545811653137207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.630681Z", "completed_at": "2024-08-16T01:26:49.632507Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.637897Z", "completed_at": "2024-08-16T01:26:49.637901Z"}], "thread_id": "Thread-7", "execution_time": 0.010001897811889648, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.617744Z", "completed_at": "2024-08-16T01:26:49.561639Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.563003Z", "completed_at": "2024-08-16T01:26:49.563007Z"}], "thread_id": "Thread-1", "execution_time": 1.0450279712677002, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\n\n\nselect \"created_at\",\n  \"ticket_id\",\n  \"_fivetran_synced\",\n  \"schedule_id\"\nfrom \"postgres\".\"zz_zendesk\".\"ticket_schedule_data\" as ticket_schedule_table\n\n", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_schedule_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.632700Z", "completed_at": "2024-08-16T01:26:49.563240Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.568154Z", "completed_at": "2024-08-16T01:26:49.568158Z"}], "thread_id": "Thread-8", "execution_time": 1.0527079105377197, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"allow_channelback\",\n  \"assignee_id\",\n  \"brand_id\",\n  \"created_at\",\n  \"description\",\n  \"due_at\",\n  \"external_id\",\n  \"forum_topic_id\",\n  \"group_id\",\n  \"has_incidents\",\n  \"is_public\",\n  \"organization_id\",\n  \"priority\",\n  \"problem_id\",\n  \"recipient\",\n  \"requester_id\",\n  \"status\",\n  \"subject\",\n  \"submitter_id\",\n  \"system_client\",\n  \"ticket_form_id\",\n  \"type\",\n  \"updated_at\",\n  \"url\",\n  \"via_channel\",\n  \"via_source_from_id\",\n  \"via_source_from_title\",\n  \"via_source_rel\",\n  \"via_source_to_address\",\n  \"via_source_to_name\",\n  \"merged_ticket_ids\",\n  \"via_source_from_address\",\n  \"followup_ids\",\n  \"via_followup_source_id\"\nfrom \"postgres\".\"zz_zendesk\".\"ticket_data\" as ticket_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:48.627784Z", "completed_at": "2024-08-16T01:26:49.562479Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:49.565351Z", "completed_at": "2024-08-16T01:26:49.565355Z"}], "thread_id": "Thread-6", "execution_time": 1.0589170455932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag_tmp", "compiled": true, "compiled_code": "select \"tag\",\n  \"ticket_id\",\n  \"_fivetran_synced\"\nfrom \"postgres\".\"zz_zendesk\".\"ticket_tag_data\" as ticket_tag_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_tag_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.526728Z", "completed_at": "2024-08-16T01:26:50.260922Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.261277Z", "completed_at": "2024-08-16T01:26:50.261294Z"}], "thread_id": "Thread-5", "execution_time": 0.776890754699707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tmp", "compiled": true, "compiled_code": "select \"id\",\n  \"_fivetran_synced\",\n  \"active\",\n  \"alias\",\n  \"authenticity_token\",\n  \"chat_only\",\n  \"created_at\",\n  \"details\",\n  \"email\",\n  \"external_id\",\n  \"last_login_at\",\n  \"locale\",\n  \"locale_id\",\n  \"moderator\",\n  \"name\",\n  \"notes\",\n  \"only_private_comments\",\n  \"organization_id\",\n  \"phone\",\n  \"remote_photo_url\",\n  \"restricted_agent\",\n  \"role\",\n  \"shared\",\n  \"shared_agent\",\n  \"signature\",\n  \"suspended\",\n  \"ticket_restriction\",\n  \"time_zone\",\n  \"two_factor_auth_enabled\",\n  \"updated_at\",\n  \"url\",\n  \"verified\"   \nfrom \"postgres\".\"zz_zendesk\".\"user_data\" as user_table", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.644070Z", "completed_at": "2024-08-16T01:26:50.450508Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.451214Z", "completed_at": "2024-08-16T01:26:50.451221Z"}], "thread_id": "Thread-4", "execution_time": 0.8674869537353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization_tag_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization_tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.638244Z", "completed_at": "2024-08-16T01:26:50.451999Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.452530Z", "completed_at": "2024-08-16T01:26:50.452535Z"}], "thread_id": "Thread-3", "execution_time": 0.8820710182189941, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__group_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as group_id,\n        name\n    from fields\n    \n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__group\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.633262Z", "completed_at": "2024-08-16T01:26:50.451760Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.452289Z", "completed_at": "2024-08-16T01:26:50.452293Z"}], "thread_id": "Thread-2", "execution_time": 0.8828201293945312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_holiday_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp ) as _fivetran_synced,\n        cast(end_date as timestamp ) as holiday_end_date_at,\n        cast(id as TEXT ) as holiday_id,\n        name as holiday_name,\n        cast(schedule_id as TEXT ) as schedule_id,\n        cast(start_date as timestamp ) as holiday_start_date_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_holiday\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.675325Z", "completed_at": "2024-08-16T01:26:50.450965Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.451501Z", "completed_at": "2024-08-16T01:26:50.451506Z"}], "thread_id": "Thread-6", "execution_time": 0.8370842933654785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    end_time_utc\n    \n as \n    \n    end_time_utc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    start_time_utc\n    \n as \n    \n    start_time_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as TEXT) as schedule_id, --need to convert from numeric to string for downstream models to work properly\n        end_time,\n        start_time,\n        name as schedule_name,\n        created_at,\n        time_zone\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.648689Z", "completed_at": "2024-08-16T01:26:50.509753Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.511736Z", "completed_at": "2024-08-16T01:26:50.511740Z"}], "thread_id": "Thread-7", "execution_time": 0.9254591464996338, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__brand_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    brand_url\n    \n as \n    \n    brand_url\n    \n, \n    \n    \n    has_help_center\n    \n as \n    \n    has_help_center\n    \n, \n    \n    \n    help_center_state\n    \n as \n    \n    help_center_state\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    logo_content_type\n    \n as \n    \n    logo_content_type\n    \n, \n    \n    \n    logo_content_url\n    \n as \n    \n    logo_content_url\n    \n, \n    \n    \n    logo_deleted\n    \n as \n    \n    logo_deleted\n    \n, \n    \n    \n    logo_file_name\n    \n as \n    \n    logo_file_name\n    \n, \n    \n    \n    logo_height\n    \n as \n    \n    logo_height\n    \n, \n    \n    \n    logo_id\n    \n as \n    \n    logo_id\n    \n, \n    \n    \n    logo_inline\n    \n as \n    \n    logo_inline\n    \n, \n    \n    \n    logo_mapped_content_url\n    \n as \n    \n    logo_mapped_content_url\n    \n, \n    \n    \n    logo_size\n    \n as \n    \n    logo_size\n    \n, \n    \n    \n    logo_url\n    \n as \n    \n    logo_url\n    \n, \n    \n    \n    logo_width\n    \n as \n    \n    logo_width\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subdomain\n    \n as \n    \n    subdomain\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as brand_id,\n        brand_url,\n        name,\n        subdomain,\n        active as is_active\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__brand\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.659852Z", "completed_at": "2024-08-16T01:26:50.510780Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.512838Z", "completed_at": "2024-08-16T01:26:50.512842Z"}], "thread_id": "Thread-1", "execution_time": 0.9169340133666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    shared_comments\n    \n as \n    \n    shared_comments\n    \n, \n    \n    \n    shared_tickets\n    \n as \n    \n    shared_tickets\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        created_at,\n        updated_at,\n        details,\n        name,\n        external_id\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:49.669922Z", "completed_at": "2024-08-16T01:26:50.510563Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:50.512634Z", "completed_at": "2024-08-16T01:26:50.512638Z"}], "thread_id": "Thread-8", "execution_time": 0.9080281257629395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__daylight_time_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    daylight_end_utc\n    \n as \n    \n    daylight_end_utc\n    \n, \n    \n    \n    daylight_offset\n    \n as \n    \n    daylight_offset\n    \n, \n    \n    \n    daylight_start_utc\n    \n as \n    \n    daylight_start_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    year\n    \n as \n    \n    year\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        daylight_end_utc,\n        daylight_offset,\n        daylight_start_utc,\n        time_zone,\n        year,\n        daylight_offset * 60 as daylight_offset_minutes\n        \n    from fields\n)\n\nselect * from final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__daylight_time\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.304100Z", "completed_at": "2024-08-16T01:26:51.039687Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.040269Z", "completed_at": "2024-08-16T01:26:51.040288Z"}], "thread_id": "Thread-5", "execution_time": 0.7912158966064453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__domain_name_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    domain_name\n    \n as \n    \n    domain_name\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        domain_name,\n        index\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__domain_name\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.528331Z", "completed_at": "2024-08-16T01:26:51.376371Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.376970Z", "completed_at": "2024-08-16T01:26:51.376976Z"}], "thread_id": "Thread-6", "execution_time": 0.9391837120056152, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__time_zone_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    standard_offset\n    \n as \n    \n    standard_offset\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        standard_offset,\n        time_zone,\n        -- the standard_offset is a string written as [+/-]HH:MM\n        -- let's convert it to an integer value of minutes\n        cast( \n\n  \n    \n\n    split_part(\n        standard_offset,\n        ':',\n        1\n        )\n\n\n  \n\n as integer ) * 60 +\n            (cast( \n\n  \n    \n\n    split_part(\n        standard_offset,\n        ':',\n        2\n        )\n\n\n  \n\n as integer ) *\n                (case when standard_offset like '-%' then -1 else 1 end) ) as standard_offset_minutes\n    \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__time_zone\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.520389Z", "completed_at": "2024-08-16T01:26:51.377459Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.378265Z", "completed_at": "2024-08-16T01:26:51.378269Z"}], "thread_id": "Thread-3", "execution_time": 0.9473490715026855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_comment_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    cast(null as integer) as \n    \n    call_duration\n    \n , \n    cast(null as integer) as \n    \n    call_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    facebook_comment\n    \n as \n    \n    facebook_comment\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as integer) as \n    \n    location\n    \n , \n    \n    \n    public\n    \n as \n    \n    public\n    \n, \n    cast(null as integer) as \n    \n    recording_url\n    \n , \n    cast(null as timestamp) as \n    \n    started_at\n    \n , \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    cast(null as integer) as \n    \n    transcription_status\n    \n , \n    cast(null as integer) as \n    \n    transcription_text\n    \n , \n    cast(null as integer) as \n    \n    trusted\n    \n , \n    \n    \n    tweet\n    \n as \n    \n    tweet\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    voice_comment\n    \n as \n    \n    voice_comment\n    \n, \n    cast(null as integer) as \n    \n    voice_comment_transcription_visible\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_comment_id,\n        _fivetran_synced,\n        _fivetran_deleted,\n        body,\n        cast(created as timestamp) as created_at,\n        public as is_public,\n        ticket_id,\n        user_id,\n        facebook_comment as is_facebook_comment,\n        tweet as is_tweet,\n        voice_comment as is_voice_comment\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_comment\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.524186Z", "completed_at": "2024-08-16T01:26:51.377226Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.377988Z", "completed_at": "2024-08-16T01:26:51.377993Z"}], "thread_id": "Thread-2", "execution_time": 0.9482009410858154, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_field_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    field_name\n    \n as \n    \n    field_name\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        field_name,\n        cast(updated as timestamp) as valid_starting_at,\n        cast(lead(updated) over (partition by ticket_id, field_name order by updated) as timestamp) as valid_ending_at,\n        value,\n        user_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_field_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.515628Z", "completed_at": "2024-08-16T01:26:51.376705Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.377703Z", "completed_at": "2024-08-16T01:26:51.377707Z"}], "thread_id": "Thread-4", "execution_time": 0.9494650363922119, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_form_history_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    end_user_visible\n    \n as \n    \n    end_user_visible\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_form_id,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        display_name,\n        active as is_active,\n        name\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n    \n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_form_history\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.583734Z", "completed_at": "2024-08-16T01:26:51.429230Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.429714Z", "completed_at": "2024-08-16T01:26:51.429718Z"}], "thread_id": "Thread-8", "execution_time": 0.9339289665222168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    allow_channelback\n    \n as \n    \n    allow_channelback\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_at\n    \n as \n    \n    due_at\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    forum_topic_id\n    \n as \n    \n    forum_topic_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    has_incidents\n    \n as \n    \n    has_incidents\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_public\n    \n as \n    \n    is_public\n    \n, \n    \n    \n    merged_ticket_ids\n    \n as \n    \n    merged_ticket_ids\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    problem_id\n    \n as \n    \n    problem_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    requester_id\n    \n as \n    \n    requester_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    submitter_id\n    \n as \n    \n    submitter_id\n    \n, \n    cast(null as integer) as \n    \n    system_ccs\n    \n , \n    \n    \n    system_client\n    \n as \n    \n    system_client\n    \n, \n    cast(null as TEXT) as \n    \n    system_ip_address\n    \n , \n    cast(null as integer) as \n    \n    system_json_email_identifier\n    \n , \n    cast(null as float) as \n    \n    system_latitude\n    \n , \n    cast(null as TEXT) as \n    \n    system_location\n    \n , \n    cast(null as float) as \n    \n    system_longitude\n    \n , \n    cast(null as integer) as \n    \n    system_machine_generated\n    \n , \n    cast(null as integer) as \n    \n    system_message_id\n    \n , \n    cast(null as integer) as \n    \n    system_raw_email_identifier\n    \n , \n    \n    \n    ticket_form_id\n    \n as \n    \n    ticket_form_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    via_channel\n    \n as \n    \n    via_channel\n    \n, \n    \n    \n    via_source_from_address\n    \n as \n    \n    via_source_from_address\n    \n, \n    \n    \n    via_source_from_id\n    \n as \n    \n    via_source_from_id\n    \n, \n    \n    \n    via_source_from_title\n    \n as \n    \n    via_source_from_title\n    \n, \n    \n    \n    via_source_rel\n    \n as \n    \n    via_source_rel\n    \n, \n    \n    \n    via_source_to_address\n    \n as \n    \n    via_source_to_address\n    \n, \n    \n    \n    via_source_to_name\n    \n as \n    \n    via_source_to_name\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_id,\n        _fivetran_synced,\n        _fivetran_deleted,\n        assignee_id,\n        brand_id,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        description,\n        due_at,\n        group_id,\n        external_id,\n        is_public,\n        organization_id,\n        priority,\n        recipient,\n        requester_id,\n        status,\n        subject,\n        problem_id,\n        submitter_id,\n        ticket_form_id,\n        type,\n        url,\n        via_channel as created_channel,\n        via_source_from_id as source_from_id,\n        via_source_from_title as source_from_title,\n        via_source_rel as source_rel,\n        via_source_to_address as source_to_address,\n        via_source_to_name as source_to_name\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.577853Z", "completed_at": "2024-08-16T01:26:51.429486Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.429935Z", "completed_at": "2024-08-16T01:26:51.429939Z"}], "thread_id": "Thread-1", "execution_time": 0.9442241191864014, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_schedule_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        cast(created_at as timestamp) as created_at,\n        cast(schedule_id as TEXT) as schedule_id --need to convert from numeric to string for downstream models to work properly\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_schedule\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:50.569843Z", "completed_at": "2024-08-16T01:26:51.428667Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.428895Z", "completed_at": "2024-08-16T01:26:51.428901Z"}], "thread_id": "Thread-7", "execution_time": 0.9557318687438965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user_tag_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        user_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user_tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.525889Z", "completed_at": "2024-08-16T01:26:51.528972Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.529211Z", "completed_at": "2024-08-16T01:26:51.529217Z"}], "thread_id": "Thread-7", "execution_time": 0.0038089752197265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__brand_brand_id.fdf8e23c9e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    brand_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__brand\"\nwhere brand_id is not null\ngroup by brand_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.522234Z", "completed_at": "2024-08-16T01:26:51.533818Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.534061Z", "completed_at": "2024-08-16T01:26:51.534071Z"}], "thread_id": "Thread-1", "execution_time": 0.012324810028076172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__brand_brand_id.a2419e1741", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect brand_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__brand\"\nwhere brand_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.517901Z", "completed_at": "2024-08-16T01:26:51.537648Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.538181Z", "completed_at": "2024-08-16T01:26:51.538186Z"}], "thread_id": "Thread-8", "execution_time": 0.020763158798217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__schedule_holiday_holiday_id.0341d5635a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    holiday_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_holiday\"\nwhere holiday_id is not null\ngroup by holiday_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.473495Z", "completed_at": "2024-08-16T01:26:51.537942Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.538823Z", "completed_at": "2024-08-16T01:26:51.538827Z"}], "thread_id": "Thread-2", "execution_time": 0.0744180679321289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__group_group_id.f0658dabcd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    group_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__group\"\nwhere group_id is not null\ngroup by group_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.464734Z", "completed_at": "2024-08-16T01:26:51.538598Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.540067Z", "completed_at": "2024-08-16T01:26:51.540072Z"}], "thread_id": "Thread-3", "execution_time": 0.07705879211425781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__group_group_id.7659ed83ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect group_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__group\"\nwhere group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.510016Z", "completed_at": "2024-08-16T01:26:51.539167Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.540716Z", "completed_at": "2024-08-16T01:26:51.540719Z"}], "thread_id": "Thread-4", "execution_time": 0.06969809532165527, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__schedule_holiday_holiday_id.52eb08f782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__schedule_holiday\"\nwhere holiday_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.535058Z", "completed_at": "2024-08-16T01:26:51.539668Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.541398Z", "completed_at": "2024-08-16T01:26:51.541403Z"}], "thread_id": "Thread-1", "execution_time": 0.00681304931640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__organization_organization_id.152be1ab31", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    organization_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization\"\nwhere organization_id is not null\ngroup by organization_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.530231Z", "completed_at": "2024-08-16T01:26:51.539875Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.541778Z", "completed_at": "2024-08-16T01:26:51.541781Z"}], "thread_id": "Thread-7", "execution_time": 0.012021064758300781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__organization_organization_id.de7b98c06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__organization\"\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.544160Z", "completed_at": "2024-08-16T01:26:51.559963Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.565284Z", "completed_at": "2024-08-16T01:26:51.565289Z"}], "thread_id": "Thread-8", "execution_time": 0.024203062057495117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.dbt_utils_unique_combination_of_columns_stg_zendesk__daylight_time_time_zone__year.88227aef3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        time_zone, year\n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__daylight_time\"\n    group by time_zone, year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.550863Z", "completed_at": "2024-08-16T01:26:51.565648Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.566689Z", "completed_at": "2024-08-16T01:26:51.566694Z"}], "thread_id": "Thread-2", "execution_time": 0.024367094039916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__domain_name_organization_id.a2b5ff8fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__domain_name\"\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.556771Z", "completed_at": "2024-08-16T01:26:51.565966Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.567070Z", "completed_at": "2024-08-16T01:26:51.567073Z"}], "thread_id": "Thread-4", "execution_time": 0.02317500114440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__time_zone_time_zone.67995adbaf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    time_zone as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__time_zone\"\nwhere time_zone is not null\ngroup by time_zone\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.554130Z", "completed_at": "2024-08-16T01:26:51.566155Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.567812Z", "completed_at": "2024-08-16T01:26:51.567815Z"}], "thread_id": "Thread-3", "execution_time": 0.024323225021362305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__time_zone_time_zone.b25b3452b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_zone\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__time_zone\"\nwhere time_zone is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.562742Z", "completed_at": "2024-08-16T01:26:51.567424Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.568871Z", "completed_at": "2024-08-16T01:26:51.568875Z"}], "thread_id": "Thread-7", "execution_time": 0.018491029739379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_comment_ticket_comment_id.ba353330cd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ticket_comment_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_comment\"\nwhere ticket_comment_id is not null\ngroup by ticket_comment_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.560200Z", "completed_at": "2024-08-16T01:26:51.567621Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.569218Z", "completed_at": "2024-08-16T01:26:51.569221Z"}], "thread_id": "Thread-1", "execution_time": 0.019081830978393555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_comment_ticket_comment_id.b821f4a606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_comment_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_comment\"\nwhere ticket_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.570351Z", "completed_at": "2024-08-16T01:26:51.579813Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.580051Z", "completed_at": "2024-08-16T01:26:51.580057Z"}], "thread_id": "Thread-8", "execution_time": 0.011981010437011719, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_form_history_ticket_form_id.1afe781a17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_form_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_form_history\"\nwhere ticket_form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.573515Z", "completed_at": "2024-08-16T01:26:51.580478Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.580879Z", "completed_at": "2024-08-16T01:26:51.580882Z"}], "thread_id": "Thread-2", "execution_time": 0.011111259460449219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_ticket_id.a8229e6981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket\"\nwhere ticket_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.576263Z", "completed_at": "2024-08-16T01:26:51.580680Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.581206Z", "completed_at": "2024-08-16T01:26:51.581209Z"}], "thread_id": "Thread-4", "execution_time": 0.0112152099609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_ticket_id.4be7124521", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ticket_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket\"\nwhere ticket_id is not null\ngroup by ticket_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.097824Z", "completed_at": "2024-08-16T01:26:51.758414Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:51.758825Z", "completed_at": "2024-08-16T01:26:51.758839Z"}], "thread_id": "Thread-5", "execution_time": 0.7242166996002197, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_tag_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        \n        tag as tags\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__ticket_tag\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:51.455063Z", "completed_at": "2024-08-16T01:26:52.166892Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:52.167252Z", "completed_at": "2024-08-16T01:26:52.167261Z"}], "thread_id": "Thread-6", "execution_time": 0.7709779739379883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user_tmp\"\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as boolean) as \n    \n    _fivetran_deleted\n    \n , \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    authenticity_token\n    \n as \n    \n    authenticity_token\n    \n, \n    \n    \n    chat_only\n    \n as \n    \n    chat_only\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_login_at\n    \n as \n    \n    last_login_at\n    \n, \n    \n    \n    locale\n    \n as \n    \n    locale\n    \n, \n    \n    \n    locale_id\n    \n as \n    \n    locale_id\n    \n, \n    \n    \n    moderator\n    \n as \n    \n    moderator\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    only_private_comments\n    \n as \n    \n    only_private_comments\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    remote_photo_url\n    \n as \n    \n    remote_photo_url\n    \n, \n    \n    \n    restricted_agent\n    \n as \n    \n    restricted_agent\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    shared\n    \n as \n    \n    shared\n    \n, \n    \n    \n    shared_agent\n    \n as \n    \n    shared_agent\n    \n, \n    \n    \n    signature\n    \n as \n    \n    signature\n    \n, \n    \n    \n    suspended\n    \n as \n    \n    suspended\n    \n, \n    \n    \n    ticket_restriction\n    \n as \n    \n    ticket_restriction\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    two_factor_auth_enabled\n    \n as \n    \n    two_factor_auth_enabled\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n        \n    from base\n),\n\nfinal as ( \n    \n    select \n        id as user_id,\n        external_id,\n        _fivetran_synced,\n        _fivetran_deleted,\n        cast(last_login_at as timestamp) as last_login_at,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        email,\n        name,\n        organization_id,\n        phone,\n        role,\n        ticket_restriction,\n        time_zone,\n        locale,\n        active as is_active,\n        suspended as is_suspended\n\n        \n\n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:52.229384Z", "completed_at": "2024-08-16T01:26:52.239453Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:52.240117Z", "completed_at": "2024-08-16T01:26:52.240125Z"}], "thread_id": "Thread-3", "execution_time": 0.012581825256347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__user_user_id.102d572926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user\"\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-16T01:26:52.234476Z", "completed_at": "2024-08-16T01:26:52.239780Z"}, {"name": "execute", "started_at": "2024-08-16T01:26:52.240714Z", "completed_at": "2024-08-16T01:26:52.240720Z"}], "thread_id": "Thread-7", "execution_time": 0.012635231018066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__user_user_id.3d3e346b11", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom \"postgres\".\"zz_zendesk_zendesk_source\".\"stg_zendesk__user\"\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 7.7898170948028564, "args": {"favor_state": false, "invocation_command": "dbt docs generate", "macro_debugging": false, "log_format_file": "debug", "use_colors": true, "show_resource_report": false, "strict_mode": false, "cache_selected_only": false, "empty_catalog": false, "print": true, "log_path": "/Users/catherinefritz/Documents/dbt_packages/zendesk/dbt_zendesk_source/integration_tests/logs", "partial_parse_file_diff": true, "vars": {}, "require_resource_names_without_spaces": false, "enable_legacy_logger": false, "log_level": "info", "project_dir": "/Users/catherinefritz/Documents/dbt_packages/zendesk/dbt_zendesk_source/integration_tests", "version_check": true, "select": [], "printer_width": 80, "defer": false, "profiles_dir": "/Users/catherinefritz/.dbt", "which": "generate", "populate_cache": true, "require_explicit_package_overrides_for_builtin_materializations": true, "write_json": true, "use_colors_file": true, "send_anonymous_usage_stats": true, "static_parser": true, "log_file_max_bytes": 10485760, "partial_parse": true, "quiet": false, "indirect_selection": "eager", "compile": true, "static": false, "exclude": [], "log_format": "default", "introspect": true, "warn_error_options": {"include": [], "exclude": []}, "source_freshness_run_project_hooks": false, "log_level_file": "debug"}}