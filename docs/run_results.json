{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.8", "generated_at": "2024-02-29T19:50:13.054680Z", "invocation_id": "de8af82a-35cb-43b3-b3ed-b11277e451ab", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.052700Z", "completed_at": "2024-02-29T19:50:08.566318Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:08.567215Z", "completed_at": "2024-02-29T19:50:08.567246Z"}], "thread_id": "Thread-4", "execution_time": 0.5428652763366699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `created_at`,\n  `name`,\n  `updated_at`,\n  `url`  \nfrom `dbt-package-testing`.`zendesk_source_testing`.`group_data` as group_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__group_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.048264Z", "completed_at": "2024-02-29T19:50:08.585234Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:08.585916Z", "completed_at": "2024-02-29T19:50:08.585923Z"}], "thread_id": "Thread-3", "execution_time": 0.5621941089630127, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nselect `index`,\n  `organization_id`,\n  `_fivetran_synced`,\n  `domain_name` \nfrom `dbt-package-testing`.`zendesk_source_testing`.`domain_name_data` as domain_name_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__domain_name_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.026354Z", "completed_at": "2024-02-29T19:50:08.609264Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:08.609999Z", "completed_at": "2024-02-29T19:50:08.610007Z"}], "thread_id": "Thread-1", "execution_time": 0.5885410308837891, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `active`,\n  `brand_url`,\n  `default`,\n  `has_help_center`,\n  `help_center_state`,\n  `logo_content_type`,\n  `logo_content_url`,\n  `logo_deleted`,\n  `logo_file_name`,\n  `logo_height`,\n  `logo_id`,\n  `logo_inline`,\n  `logo_mapped_content_url`,\n  `logo_size`,\n  `logo_url`,\n  `logo_width`,\n  `name`,\n  `subdomain`,\n  `url`  \nfrom `dbt-package-testing`.`zendesk_source_testing`.`brand_data` as brand_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__brand_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.033434Z", "completed_at": "2024-02-29T19:50:08.629530Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:08.630199Z", "completed_at": "2024-02-29T19:50:08.630206Z"}], "thread_id": "Thread-2", "execution_time": 0.6074087619781494, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `time_zone`,\n  `year`,\n  `_fivetran_synced`,\n  `daylight_end_utc`,\n  `daylight_offset`,\n  `daylight_start_utc`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`daylight_time_data` as daylight_time_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__daylight_time_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.588295Z", "completed_at": "2024-02-29T19:50:09.076981Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.079492Z", "completed_at": "2024-02-29T19:50:09.079512Z"}], "thread_id": "Thread-3", "execution_time": 0.49311208724975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `created_at`,\n  `details`,\n  `external_id`,\n  `group_id`,\n  `name`,\n  `notes`,\n  `shared_comments`,\n  `shared_tickets`,\n  `updated_at`,\n  `url`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`organization_data` as organization_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.569512Z", "completed_at": "2024-02-29T19:50:09.098456Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.099131Z", "completed_at": "2024-02-29T19:50:09.099139Z"}], "thread_id": "Thread-4", "execution_time": 0.5310769081115723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nselect `organization_id`,\n  `tag`,\n  `_fivetran_synced`  \nfrom `dbt-package-testing`.`zendesk_source_testing`.`organization_tag_data` as organization_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.612451Z", "completed_at": "2024-02-29T19:50:09.167424Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.168107Z", "completed_at": "2024-02-29T19:50:09.168115Z"}], "thread_id": "Thread-1", "execution_time": 0.5574290752410889, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `id`,\n  `schedule_id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `end_date`,\n  `name`,\n  `start_date`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`schedule_holiday_data` as schedule_holiday_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_holiday_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:08.632873Z", "completed_at": "2024-02-29T19:50:09.178662Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.179458Z", "completed_at": "2024-02-29T19:50:09.179466Z"}], "thread_id": "Thread-2", "execution_time": 0.5484380722045898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `end_time`,\n  `id`,\n  `start_time`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `end_time_utc`,\n  `name`,\n  `start_time_utc`,\n  `time_zone`,\n  `created_at`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`schedule_data` as schedule_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.082105Z", "completed_at": "2024-02-29T19:50:09.603157Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.604986Z", "completed_at": "2024-02-29T19:50:09.604994Z"}], "thread_id": "Thread-3", "execution_time": 0.5244250297546387, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `body`,\n  `created`,\n  `facebook_comment`,\n  `public`,\n  `ticket_id`,\n  `tweet`,\n  `user_id`,\n  `voice_comment`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`ticket_comment_data` as ticket_comment_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_comment_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.101502Z", "completed_at": "2024-02-29T19:50:09.624056Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.624776Z", "completed_at": "2024-02-29T19:50:09.624784Z"}], "thread_id": "Thread-4", "execution_time": 0.5248348712921143, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history_tmp", "compiled": true, "compiled_code": "select `field_name`,\n  `ticket_id`,\n  `updated`,\n  `_fivetran_synced`,\n  `user_id`,\n  `value`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`ticket_field_history_data` as ticket_field_history_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_field_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.172669Z", "completed_at": "2024-02-29T19:50:09.695339Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.705735Z", "completed_at": "2024-02-29T19:50:09.705747Z"}], "thread_id": "Thread-1", "execution_time": 0.537362813949585, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nselect `id`,\n  `updated_at`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `active`,\n  `created_at`,\n  `display_name`,\n  `end_user_visible`,\n  `name`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`ticket_form_history_data` as ticket_form_history_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_form_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.181818Z", "completed_at": "2024-02-29T19:50:09.715098Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:09.715810Z", "completed_at": "2024-02-29T19:50:09.715818Z"}], "thread_id": "Thread-2", "execution_time": 0.5353958606719971, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\n\n\nselect `created_at`,\n  `ticket_id`,\n  `_fivetran_synced`,\n  `schedule_id`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`ticket_schedule_data` as ticket_schedule_table\n\n", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_schedule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.627120Z", "completed_at": "2024-02-29T19:50:10.174919Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.175725Z", "completed_at": "2024-02-29T19:50:10.175733Z"}], "thread_id": "Thread-4", "execution_time": 0.5501809120178223, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `allow_channelback`,\n  `assignee_id`,\n  `brand_id`,\n  `created_at`,\n  `description`,\n  `due_at`,\n  `external_id`,\n  `forum_topic_id`,\n  `group_id`,\n  `has_incidents`,\n  `is_public`,\n  `organization_id`,\n  `priority`,\n  `problem_id`,\n  `recipient`,\n  `requester_id`,\n  `status`,\n  `subject`,\n  `submitter_id`,\n  `system_client`,\n  `ticket_form_id`,\n  `type`,\n  `updated_at`,\n  `url`,\n  `via_channel`,\n  `via_source_from_id`,\n  `via_source_from_title`,\n  `via_source_rel`,\n  `via_source_to_address`,\n  `via_source_to_name`,\n  `merged_ticket_ids`,\n  `via_source_from_address`,\n  `followup_ids`,\n  `via_followup_source_id`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`ticket_data` as ticket_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.717766Z", "completed_at": "2024-02-29T19:50:10.234600Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.235391Z", "completed_at": "2024-02-29T19:50:10.235399Z"}], "thread_id": "Thread-2", "execution_time": 0.5190818309783936, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nselect `tag`,\n  `user_id`,\n  `_fivetran_synced`  \nfrom `dbt-package-testing`.`zendesk_source_testing`.`user_tag_data` as user_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.607380Z", "completed_at": "2024-02-29T19:50:10.236848Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.238556Z", "completed_at": "2024-02-29T19:50:10.238561Z"}], "thread_id": "Thread-3", "execution_time": 0.6346380710601807, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag_tmp", "compiled": true, "compiled_code": "select `tag`,\n  `ticket_id`,\n  `_fivetran_synced`\nfrom `dbt-package-testing`.`zendesk_source_testing`.`ticket_tag_data` as ticket_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.238894Z", "completed_at": "2024-02-29T19:50:10.244547Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.246590Z", "completed_at": "2024-02-29T19:50:10.246597Z"}], "thread_id": "Thread-2", "execution_time": 0.010057926177978516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.brand_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.247819Z", "completed_at": "2024-02-29T19:50:10.249339Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.251165Z", "completed_at": "2024-02-29T19:50:10.251171Z"}], "thread_id": "Thread-3", "execution_time": 0.0059850215911865234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.daylight_time_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.252485Z", "completed_at": "2024-02-29T19:50:10.254035Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.255771Z", "completed_at": "2024-02-29T19:50:10.255778Z"}], "thread_id": "Thread-2", "execution_time": 0.0059680938720703125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.domain_name_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.256985Z", "completed_at": "2024-02-29T19:50:10.258623Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.260495Z", "completed_at": "2024-02-29T19:50:10.260501Z"}], "thread_id": "Thread-3", "execution_time": 0.006006002426147461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.group_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.261602Z", "completed_at": "2024-02-29T19:50:10.263005Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.264470Z", "completed_at": "2024-02-29T19:50:10.264475Z"}], "thread_id": "Thread-2", "execution_time": 0.0052280426025390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.265568Z", "completed_at": "2024-02-29T19:50:10.266987Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.268343Z", "completed_at": "2024-02-29T19:50:10.268348Z"}], "thread_id": "Thread-3", "execution_time": 0.00502777099609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.269371Z", "completed_at": "2024-02-29T19:50:10.271825Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.273329Z", "completed_at": "2024-02-29T19:50:10.273334Z"}], "thread_id": "Thread-2", "execution_time": 0.006116151809692383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.274436Z", "completed_at": "2024-02-29T19:50:10.275798Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.277461Z", "completed_at": "2024-02-29T19:50:10.277467Z"}], "thread_id": "Thread-3", "execution_time": 0.00535893440246582, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_holiday_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.278521Z", "completed_at": "2024-02-29T19:50:10.279831Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.281141Z", "completed_at": "2024-02-29T19:50:10.281145Z"}], "thread_id": "Thread-2", "execution_time": 0.004939079284667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.282199Z", "completed_at": "2024-02-29T19:50:10.283647Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.286440Z", "completed_at": "2024-02-29T19:50:10.286447Z"}], "thread_id": "Thread-3", "execution_time": 0.0066912174224853516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.287873Z", "completed_at": "2024-02-29T19:50:10.289250Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.290929Z", "completed_at": "2024-02-29T19:50:10.290936Z"}], "thread_id": "Thread-2", "execution_time": 0.0061550140380859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_field_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:09.710806Z", "completed_at": "2024-02-29T19:50:10.290173Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.292463Z", "completed_at": "2024-02-29T19:50:10.292467Z"}], "thread_id": "Thread-1", "execution_time": 0.5858378410339355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `time_zone`,\n  `_fivetran_synced`,\n  `standard_offset` \nfrom `dbt-package-testing`.`zendesk_source_testing`.`time_zone_data` as time_zone_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__time_zone_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.292739Z", "completed_at": "2024-02-29T19:50:10.294942Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.297405Z", "completed_at": "2024-02-29T19:50:10.297410Z"}], "thread_id": "Thread-3", "execution_time": 0.00814199447631836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_form_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.298980Z", "completed_at": "2024-02-29T19:50:10.300356Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.303875Z", "completed_at": "2024-02-29T19:50:10.303881Z"}], "thread_id": "Thread-2", "execution_time": 0.008149147033691406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.301680Z", "completed_at": "2024-02-29T19:50:10.303032Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.305115Z", "completed_at": "2024-02-29T19:50:10.305119Z"}], "thread_id": "Thread-1", "execution_time": 0.009426355361938477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.305375Z", "completed_at": "2024-02-29T19:50:10.306615Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.308779Z", "completed_at": "2024-02-29T19:50:10.308784Z"}], "thread_id": "Thread-3", "execution_time": 0.0065670013427734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.time_zone_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.310315Z", "completed_at": "2024-02-29T19:50:10.311679Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.315021Z", "completed_at": "2024-02-29T19:50:10.315029Z"}], "thread_id": "Thread-2", "execution_time": 0.009584903717041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.312788Z", "completed_at": "2024-02-29T19:50:10.314009Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.318112Z", "completed_at": "2024-02-29T19:50:10.318121Z"}], "thread_id": "Thread-1", "execution_time": 0.013012409210205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.177981Z", "completed_at": "2024-02-29T19:50:10.706567Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.707270Z", "completed_at": "2024-02-29T19:50:10.707278Z"}], "thread_id": "Thread-4", "execution_time": 0.5307729244232178, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `active`,\n  `alias`,\n  `authenticity_token`,\n  `chat_only`,\n  `created_at`,\n  `details`,\n  `email`,\n  `external_id`,\n  `last_login_at`,\n  `locale`,\n  `locale_id`,\n  `moderator`,\n  `name`,\n  `notes`,\n  `only_private_comments`,\n  `organization_id`,\n  `phone`,\n  `remote_photo_url`,\n  `restricted_agent`,\n  `role`,\n  `shared`,\n  `shared_agent`,\n  `signature`,\n  `suspended`,\n  `ticket_restriction`,\n  `time_zone`,\n  `two_factor_auth_enabled`,\n  `updated_at`,\n  `url`,\n  `verified`   \nfrom `dbt-package-testing`.`zendesk_source_testing`.`user_data` as user_table", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.327690Z", "completed_at": "2024-02-29T19:50:10.825144Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.825826Z", "completed_at": "2024-02-29T19:50:10.825834Z"}], "thread_id": "Thread-2", "execution_time": 0.5031497478485107, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__domain_name_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    domain_name\n    \n as \n    \n    domain_name\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        domain_name,\n        index\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__domain_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.338506Z", "completed_at": "2024-02-29T19:50:10.894103Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.895491Z", "completed_at": "2024-02-29T19:50:10.895499Z"}], "thread_id": "Thread-1", "execution_time": 0.5693271160125732, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__brand_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    brand_url\n    \n as \n    \n    brand_url\n    \n, \n    \n    \n    has_help_center\n    \n as \n    \n    has_help_center\n    \n, \n    \n    \n    help_center_state\n    \n as \n    \n    help_center_state\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    logo_content_type\n    \n as \n    \n    logo_content_type\n    \n, \n    \n    \n    logo_content_url\n    \n as \n    \n    logo_content_url\n    \n, \n    \n    \n    logo_deleted\n    \n as \n    \n    logo_deleted\n    \n, \n    \n    \n    logo_file_name\n    \n as \n    \n    logo_file_name\n    \n, \n    \n    \n    logo_height\n    \n as \n    \n    logo_height\n    \n, \n    \n    \n    logo_id\n    \n as \n    \n    logo_id\n    \n, \n    \n    \n    logo_inline\n    \n as \n    \n    logo_inline\n    \n, \n    \n    \n    logo_mapped_content_url\n    \n as \n    \n    logo_mapped_content_url\n    \n, \n    \n    \n    logo_size\n    \n as \n    \n    logo_size\n    \n, \n    \n    \n    logo_url\n    \n as \n    \n    logo_url\n    \n, \n    \n    \n    logo_width\n    \n as \n    \n    logo_width\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subdomain\n    \n as \n    \n    subdomain\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as brand_id,\n        brand_url,\n        name,\n        subdomain,\n        active as is_active\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__brand`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.318531Z", "completed_at": "2024-02-29T19:50:10.894523Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:10.895831Z", "completed_at": "2024-02-29T19:50:10.895835Z"}], "thread_id": "Thread-3", "execution_time": 0.5826170444488525, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__group_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as group_id,\n        name\n    from fields\n    \n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__group`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.709738Z", "completed_at": "2024-02-29T19:50:11.252835Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.253543Z", "completed_at": "2024-02-29T19:50:11.253551Z"}], "thread_id": "Thread-4", "execution_time": 0.5453391075134277, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__daylight_time_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    daylight_end_utc\n    \n as \n    \n    daylight_end_utc\n    \n, \n    \n    \n    daylight_offset\n    \n as \n    \n    daylight_offset\n    \n, \n    \n    \n    daylight_start_utc\n    \n as \n    \n    daylight_start_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    year\n    \n as \n    \n    year\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        daylight_end_utc,\n        daylight_offset,\n        daylight_start_utc,\n        time_zone,\n        year,\n        daylight_offset * 60 as daylight_offset_minutes\n        \n    from fields\n)\n\nselect * from final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__daylight_time`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.828095Z", "completed_at": "2024-02-29T19:50:11.343333Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.344032Z", "completed_at": "2024-02-29T19:50:11.344040Z"}], "thread_id": "Thread-2", "execution_time": 0.5174577236175537, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    shared_comments\n    \n as \n    \n    shared_comments\n    \n, \n    \n    \n    shared_tickets\n    \n as \n    \n    shared_tickets\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        created_at,\n        updated_at,\n        details,\n        name,\n        external_id\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.900246Z", "completed_at": "2024-02-29T19:50:11.403442Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.404147Z", "completed_at": "2024-02-29T19:50:11.404155Z"}], "thread_id": "Thread-1", "execution_time": 0.5063698291778564, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:10.904657Z", "completed_at": "2024-02-29T19:50:11.444864Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.445544Z", "completed_at": "2024-02-29T19:50:11.445552Z"}], "thread_id": "Thread-3", "execution_time": 0.5472149848937988, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_holiday_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp ) as _fivetran_synced,\n        cast(end_date as timestamp ) as holiday_end_date_at,\n        cast(id as string ) as holiday_id,\n        name as holiday_name,\n        cast(schedule_id as string ) as schedule_id,\n        cast(start_date as timestamp ) as holiday_start_date_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_holiday`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.346408Z", "completed_at": "2024-02-29T19:50:11.858034Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.858841Z", "completed_at": "2024-02-29T19:50:11.858848Z"}], "thread_id": "Thread-2", "execution_time": 0.5141329765319824, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_comment_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    cast(null as INT64) as \n    \n    call_duration\n    \n , \n    cast(null as INT64) as \n    \n    call_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    facebook_comment\n    \n as \n    \n    facebook_comment\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as INT64) as \n    \n    location\n    \n , \n    \n    \n    public\n    \n as \n    \n    public\n    \n, \n    cast(null as INT64) as \n    \n    recording_url\n    \n , \n    cast(null as timestamp) as \n    \n    started_at\n    \n , \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    cast(null as INT64) as \n    \n    transcription_status\n    \n , \n    cast(null as INT64) as \n    \n    transcription_text\n    \n , \n    cast(null as INT64) as \n    \n    trusted\n    \n , \n    \n    \n    tweet\n    \n as \n    \n    tweet\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    voice_comment\n    \n as \n    \n    voice_comment\n    \n, \n    cast(null as INT64) as \n    \n    voice_comment_transcription_visible\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_comment_id,\n        _fivetran_synced,\n        body,\n        cast(created as timestamp) as created_at,\n        public as is_public,\n        ticket_id,\n        user_id,\n        facebook_comment as is_facebook_comment,\n        tweet as is_tweet,\n        voice_comment as is_voice_comment\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_comment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.447811Z", "completed_at": "2024-02-29T19:50:11.957903Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.958695Z", "completed_at": "2024-02-29T19:50:11.958703Z"}], "thread_id": "Thread-3", "execution_time": 0.5123569965362549, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_form_history_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    end_user_visible\n    \n as \n    \n    end_user_visible\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_form_id,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        display_name,\n        active as is_active,\n        name\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n    \n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_form_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.406317Z", "completed_at": "2024-02-29T19:50:11.971097Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.971809Z", "completed_at": "2024-02-29T19:50:11.971815Z"}], "thread_id": "Thread-1", "execution_time": 0.566917896270752, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_field_history_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    field_name\n    \n as \n    \n    field_name\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        field_name,\n        cast(updated as timestamp) as valid_starting_at,\n        cast(lead(updated) over (partition by ticket_id, field_name order by updated) as timestamp) as valid_ending_at,\n        value,\n        user_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_field_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.255925Z", "completed_at": "2024-02-29T19:50:11.984349Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:11.985020Z", "completed_at": "2024-02-29T19:50:11.985027Z"}], "thread_id": "Thread-4", "execution_time": 0.7306489944458008, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    end_time_utc\n    \n as \n    \n    end_time_utc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    start_time_utc\n    \n as \n    \n    start_time_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as string) as schedule_id, --need to convert from numeric to string for downstream models to work properly\n        end_time,\n        start_time,\n        name as schedule_name,\n        created_at,\n        time_zone\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.861263Z", "completed_at": "2024-02-29T19:50:12.370903Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.371496Z", "completed_at": "2024-02-29T19:50:12.371503Z"}], "thread_id": "Thread-2", "execution_time": 0.5116322040557861, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_schedule_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        cast(created_at as timestamp) as created_at,\n        cast(schedule_id as string) as schedule_id --need to convert from numeric to string for downstream models to work properly\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_schedule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.960887Z", "completed_at": "2024-02-29T19:50:12.471357Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.472021Z", "completed_at": "2024-02-29T19:50:12.472028Z"}], "thread_id": "Thread-3", "execution_time": 0.5124638080596924, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allow_channelback\n    \n as \n    \n    allow_channelback\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_at\n    \n as \n    \n    due_at\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    forum_topic_id\n    \n as \n    \n    forum_topic_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    has_incidents\n    \n as \n    \n    has_incidents\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_public\n    \n as \n    \n    is_public\n    \n, \n    \n    \n    merged_ticket_ids\n    \n as \n    \n    merged_ticket_ids\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    problem_id\n    \n as \n    \n    problem_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    requester_id\n    \n as \n    \n    requester_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    submitter_id\n    \n as \n    \n    submitter_id\n    \n, \n    cast(null as INT64) as \n    \n    system_ccs\n    \n , \n    \n    \n    system_client\n    \n as \n    \n    system_client\n    \n, \n    cast(null as string) as \n    \n    system_ip_address\n    \n , \n    cast(null as INT64) as \n    \n    system_json_email_identifier\n    \n , \n    cast(null as FLOAT64) as \n    \n    system_latitude\n    \n , \n    cast(null as string) as \n    \n    system_location\n    \n , \n    cast(null as FLOAT64) as \n    \n    system_longitude\n    \n , \n    cast(null as INT64) as \n    \n    system_machine_generated\n    \n , \n    cast(null as INT64) as \n    \n    system_message_id\n    \n , \n    cast(null as INT64) as \n    \n    system_raw_email_identifier\n    \n , \n    \n    \n    ticket_form_id\n    \n as \n    \n    ticket_form_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    via_channel\n    \n as \n    \n    via_channel\n    \n, \n    \n    \n    via_source_from_address\n    \n as \n    \n    via_source_from_address\n    \n, \n    \n    \n    via_source_from_id\n    \n as \n    \n    via_source_from_id\n    \n, \n    \n    \n    via_source_from_title\n    \n as \n    \n    via_source_from_title\n    \n, \n    \n    \n    via_source_rel\n    \n as \n    \n    via_source_rel\n    \n, \n    \n    \n    via_source_to_address\n    \n as \n    \n    via_source_to_address\n    \n, \n    \n    \n    via_source_to_name\n    \n as \n    \n    via_source_to_name\n    \n\n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_id,\n        _fivetran_synced,\n        assignee_id,\n        brand_id,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        description,\n        due_at,\n        group_id,\n        external_id,\n        is_public,\n        organization_id,\n        priority,\n        recipient,\n        requester_id,\n        status,\n        subject,\n        problem_id,\n        submitter_id,\n        ticket_form_id,\n        type,\n        url,\n        via_channel as created_channel,\n        via_source_from_id as source_from_id,\n        via_source_from_title as source_from_title,\n        via_source_rel as source_rel,\n        via_source_to_address as source_to_address,\n        via_source_to_name as source_to_name\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.987253Z", "completed_at": "2024-02-29T19:50:12.512270Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.512824Z", "completed_at": "2024-02-29T19:50:12.512831Z"}], "thread_id": "Thread-4", "execution_time": 0.5269508361816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        \n        tag as tags\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.514615Z", "completed_at": "2024-02-29T19:50:12.523725Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.524698Z", "completed_at": "2024-02-29T19:50:12.524706Z"}], "thread_id": "Thread-4", "execution_time": 0.011537313461303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__domain_name_organization_id.a2b5ff8fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__domain_name`\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:11.974096Z", "completed_at": "2024-02-29T19:50:12.524324Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.525931Z", "completed_at": "2024-02-29T19:50:12.525941Z"}], "thread_id": "Thread-1", "execution_time": 0.5536971092224121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        user_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.528678Z", "completed_at": "2024-02-29T19:50:12.537278Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.537794Z", "completed_at": "2024-02-29T19:50:12.537800Z"}], "thread_id": "Thread-4", "execution_time": 0.010959148406982422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__brand_brand_id.a2419e1741", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect brand_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__brand`\nwhere brand_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.532391Z", "completed_at": "2024-02-29T19:50:12.542658Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.543318Z", "completed_at": "2024-02-29T19:50:12.543323Z"}], "thread_id": "Thread-1", "execution_time": 0.015556812286376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__brand_brand_id.fdf8e23c9e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select brand_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__brand`\n  where brand_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.539455Z", "completed_at": "2024-02-29T19:50:12.545215Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.549648Z", "completed_at": "2024-02-29T19:50:12.549657Z"}], "thread_id": "Thread-4", "execution_time": 0.011414051055908203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__group_group_id.7659ed83ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect group_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__group`\nwhere group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.545505Z", "completed_at": "2024-02-29T19:50:12.551692Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.555673Z", "completed_at": "2024-02-29T19:50:12.555678Z"}], "thread_id": "Thread-1", "execution_time": 0.011636018753051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__group_group_id.f0658dabcd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select group_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__group`\n  where group_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.551999Z", "completed_at": "2024-02-29T19:50:12.560684Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.561532Z", "completed_at": "2024-02-29T19:50:12.561538Z"}], "thread_id": "Thread-4", "execution_time": 0.01100611686706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.dbt_utils_unique_combination_of_columns_stg_zendesk__daylight_time_time_zone__year.88227aef3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        time_zone, year\n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__daylight_time`\n    group by time_zone, year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.557482Z", "completed_at": "2024-02-29T19:50:12.563472Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.567253Z", "completed_at": "2024-02-29T19:50:12.567258Z"}], "thread_id": "Thread-1", "execution_time": 0.01102900505065918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__organization_organization_id.de7b98c06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization`\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.563747Z", "completed_at": "2024-02-29T19:50:12.572467Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.572982Z", "completed_at": "2024-02-29T19:50:12.572987Z"}], "thread_id": "Thread-4", "execution_time": 0.010760784149169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__organization_organization_id.152be1ab31", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select organization_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__organization`\n  where organization_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.569155Z", "completed_at": "2024-02-29T19:50:12.574006Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.575521Z", "completed_at": "2024-02-29T19:50:12.575526Z"}], "thread_id": "Thread-1", "execution_time": 0.01175999641418457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__schedule_holiday_holiday_id.52eb08f782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_holiday`\nwhere holiday_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.575809Z", "completed_at": "2024-02-29T19:50:12.584728Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.585385Z", "completed_at": "2024-02-29T19:50:12.585390Z"}], "thread_id": "Thread-4", "execution_time": 0.011587142944335938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__schedule_holiday_holiday_id.0341d5635a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select holiday_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__schedule_holiday`\n  where holiday_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.581533Z", "completed_at": "2024-02-29T19:50:12.587008Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.590926Z", "completed_at": "2024-02-29T19:50:12.590943Z"}], "thread_id": "Thread-1", "execution_time": 0.01075291633605957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_comment_ticket_comment_id.b821f4a606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_comment_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_comment`\nwhere ticket_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.587749Z", "completed_at": "2024-02-29T19:50:12.596507Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.597321Z", "completed_at": "2024-02-29T19:50:12.597328Z"}], "thread_id": "Thread-4", "execution_time": 0.011424064636230469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_comment_ticket_comment_id.ba353330cd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_comment_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_comment`\n  where ticket_comment_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.593130Z", "completed_at": "2024-02-29T19:50:12.597047Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.598373Z", "completed_at": "2024-02-29T19:50:12.598377Z"}], "thread_id": "Thread-1", "execution_time": 0.006807804107666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_form_history_ticket_form_id.1afe781a17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_form_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket_form_history`\nwhere ticket_form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.601053Z", "completed_at": "2024-02-29T19:50:12.608589Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.609685Z", "completed_at": "2024-02-29T19:50:12.609691Z"}], "thread_id": "Thread-4", "execution_time": 0.010840177536010742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_ticket_id.a8229e6981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket`\nwhere ticket_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.604665Z", "completed_at": "2024-02-29T19:50:12.608892Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.609960Z", "completed_at": "2024-02-29T19:50:12.609963Z"}], "thread_id": "Thread-1", "execution_time": 0.010355949401855469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_ticket_id.4be7124521", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__ticket`\n  where ticket_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.373374Z", "completed_at": "2024-02-29T19:50:12.896903Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.897579Z", "completed_at": "2024-02-29T19:50:12.897586Z"}], "thread_id": "Thread-2", "execution_time": 0.5255160331726074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__time_zone_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    standard_offset\n    \n as \n    \n    standard_offset\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        standard_offset,\n        time_zone,\n        -- the standard_offset is a string written as [+/-]HH:MM\n        -- let's convert it to an integer value of minutes\n        cast( \n\n  \n    split(\n        standard_offset,\n        ':'\n        )[safe_offset(0)]\n  \n\n as INT64 ) * 60 +\n            (cast( \n\n  \n    split(\n        standard_offset,\n        ':'\n        )[safe_offset(1)]\n  \n\n as INT64 ) *\n                (case when standard_offset like '-%' then -1 else 1 end) ) as standard_offset_minutes\n    \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__time_zone`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.901250Z", "completed_at": "2024-02-29T19:50:12.910330Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.911168Z", "completed_at": "2024-02-29T19:50:12.911176Z"}], "thread_id": "Thread-4", "execution_time": 0.012369871139526367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__time_zone_time_zone.b25b3452b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_zone\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__time_zone`\nwhere time_zone is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.905720Z", "completed_at": "2024-02-29T19:50:12.912447Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:12.913088Z", "completed_at": "2024-02-29T19:50:12.913092Z"}], "thread_id": "Thread-1", "execution_time": 0.013563871383666992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__time_zone_time_zone.67995adbaf", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select time_zone as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__time_zone`\n  where time_zone is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:12.473807Z", "completed_at": "2024-02-29T19:50:13.034598Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:13.035265Z", "completed_at": "2024-02-29T19:50:13.035272Z"}], "thread_id": "Thread-3", "execution_time": 0.5626969337463379, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    authenticity_token\n    \n as \n    \n    authenticity_token\n    \n, \n    \n    \n    chat_only\n    \n as \n    \n    chat_only\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_login_at\n    \n as \n    \n    last_login_at\n    \n, \n    \n    \n    locale\n    \n as \n    \n    locale\n    \n, \n    \n    \n    locale_id\n    \n as \n    \n    locale_id\n    \n, \n    \n    \n    moderator\n    \n as \n    \n    moderator\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    only_private_comments\n    \n as \n    \n    only_private_comments\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    remote_photo_url\n    \n as \n    \n    remote_photo_url\n    \n, \n    \n    \n    restricted_agent\n    \n as \n    \n    restricted_agent\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    shared\n    \n as \n    \n    shared\n    \n, \n    \n    \n    shared_agent\n    \n as \n    \n    shared_agent\n    \n, \n    \n    \n    signature\n    \n as \n    \n    signature\n    \n, \n    \n    \n    suspended\n    \n as \n    \n    suspended\n    \n, \n    \n    \n    ticket_restriction\n    \n as \n    \n    ticket_restriction\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    two_factor_auth_enabled\n    \n as \n    \n    two_factor_auth_enabled\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n        \n    from base\n),\n\nfinal as ( \n    \n    select \n        id as user_id,\n        external_id,\n        _fivetran_synced,\n        cast(last_login_at as timestamp) as last_login_at,\n        cast(created_at as timestamp) as created_at,\n        cast(updated_at as timestamp) as updated_at,\n        email,\n        name,\n        organization_id,\n        phone,\n        role,\n        ticket_restriction,\n        time_zone,\n        locale,\n        active as is_active,\n        suspended as is_suspended\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:13.043572Z", "completed_at": "2024-02-29T19:50:13.048691Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:13.050102Z", "completed_at": "2024-02-29T19:50:13.050111Z"}], "thread_id": "Thread-4", "execution_time": 0.013090133666992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__user_user_id.3d3e346b11", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select user_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user`\n  where user_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-29T19:50:13.039208Z", "completed_at": "2024-02-29T19:50:13.049083Z"}, {"name": "execute", "started_at": "2024-02-29T19:50:13.050469Z", "completed_at": "2024-02-29T19:50:13.050473Z"}], "thread_id": "Thread-2", "execution_time": 0.014575958251953125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__user_user_id.102d572926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `dbt-package-testing`.`zendesk_source_testing_zendesk_source`.`stg_zendesk__user`\nwhere user_id is null\n\n\n", "relation_name": null}], "elapsed_time": 6.3839709758758545, "args": {"partial_parse": true, "defer": false, "profiles_dir": "/Users/jamie.rodriguez/.dbt", "select": [], "print": true, "strict_mode": false, "cache_selected_only": false, "log_level": "info", "log_file_max_bytes": 10485760, "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Zendesk/dbt_zendesk_source/integration_tests", "send_anonymous_usage_stats": true, "macro_debugging": false, "show_resource_report": false, "log_level_file": "debug", "version_check": true, "favor_state": false, "static_parser": true, "vars": {}, "use_colors_file": true, "log_format": "default", "exclude": [], "populate_cache": true, "use_colors": true, "indirect_selection": "eager", "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Zendesk/dbt_zendesk_source/integration_tests/logs", "static": false, "printer_width": 80, "log_format_file": "debug", "compile": true, "invocation_command": "dbt docs generate", "partial_parse_file_diff": true, "which": "generate", "empty_catalog": false, "warn_error_options": {"include": [], "exclude": []}, "quiet": false, "write_json": true, "enable_legacy_logger": false, "introspect": true}}