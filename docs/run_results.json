{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.3", "generated_at": "2023-12-07T23:08:49.127823Z", "invocation_id": "8e842ff6-5f0b-466c-89a4-88bc1d8ea038", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.304295Z", "completed_at": "2023-12-07T23:08:45.605382Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:45.607236Z", "completed_at": "2023-12-07T23:08:45.607310Z"}], "thread_id": "Thread-3", "execution_time": 0.3362729549407959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nselect `index`,\n  `organization_id`,\n  `_fivetran_synced`,\n  `domain_name` \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`domain_name_data` as domain_name_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.300294Z", "completed_at": "2023-12-07T23:08:45.630310Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:45.631256Z", "completed_at": "2023-12-07T23:08:45.631266Z"}], "thread_id": "Thread-2", "execution_time": 0.3604319095611572, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `time_zone`,\n  `year`,\n  `_fivetran_synced`,\n  `daylight_end_utc`,\n  `daylight_offset`,\n  `daylight_start_utc`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`daylight_time_data` as daylight_time_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.273192Z", "completed_at": "2023-12-07T23:08:45.711108Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:45.712071Z", "completed_at": "2023-12-07T23:08:45.712082Z"}], "thread_id": "Thread-1", "execution_time": 0.4443550109863281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `active`,\n  `brand_url`,\n  `default`,\n  `has_help_center`,\n  `help_center_state`,\n  `logo_content_type`,\n  `logo_content_url`,\n  `logo_deleted`,\n  `logo_file_name`,\n  `logo_height`,\n  `logo_id`,\n  `logo_inline`,\n  `logo_mapped_content_url`,\n  `logo_size`,\n  `logo_url`,\n  `logo_width`,\n  `name`,\n  `subdomain`,\n  `url`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`brand_data` as brand_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.307840Z", "completed_at": "2023-12-07T23:08:45.722932Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:45.723780Z", "completed_at": "2023-12-07T23:08:45.723787Z"}], "thread_id": "Thread-4", "execution_time": 0.444965124130249, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `created_at`,\n  `name`,\n  `updated_at`,\n  `url`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`group_data` as group_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.612380Z", "completed_at": "2023-12-07T23:08:46.025426Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.026925Z", "completed_at": "2023-12-07T23:08:46.026943Z"}], "thread_id": "Thread-3", "execution_time": 0.417618989944458, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nselect `organization_id`,\n  `tag`,\n  `_fivetran_synced`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`organization_tag_data` as organization_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.634426Z", "completed_at": "2023-12-07T23:08:46.046305Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.047255Z", "completed_at": "2023-12-07T23:08:46.047266Z"}], "thread_id": "Thread-2", "execution_time": 0.41486287117004395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `created_at`,\n  `details`,\n  `external_id`,\n  `group_id`,\n  `name`,\n  `notes`,\n  `shared_comments`,\n  `shared_tickets`,\n  `updated_at`,\n  `url`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`organization_data` as organization_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.726364Z", "completed_at": "2023-12-07T23:08:46.059602Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.061370Z", "completed_at": "2023-12-07T23:08:46.061377Z"}], "thread_id": "Thread-4", "execution_time": 0.3370707035064697, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `end_time`,\n  `id`,\n  `start_time`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `end_time_utc`,\n  `name`,\n  `start_time_utc`,\n  `time_zone`,\n  `created_at`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`schedule_data` as schedule_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:45.715218Z", "completed_at": "2023-12-07T23:08:46.060073Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.061789Z", "completed_at": "2023-12-07T23:08:46.061794Z"}], "thread_id": "Thread-1", "execution_time": 0.3491489887237549, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `id`,\n  `schedule_id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `end_date`,\n  `name`,\n  `start_date`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`schedule_holiday_data` as schedule_holiday_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.066442Z", "completed_at": "2023-12-07T23:08:46.405896Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.407522Z", "completed_at": "2023-12-07T23:08:46.407542Z"}], "thread_id": "Thread-4", "execution_time": 0.344318151473999, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nselect `id`,\n  `updated_at`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `active`,\n  `created_at`,\n  `display_name`,\n  `end_user_visible`,\n  `name`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_form_history_data` as ticket_form_history_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.050538Z", "completed_at": "2023-12-07T23:08:46.428218Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.429165Z", "completed_at": "2023-12-07T23:08:46.429176Z"}], "thread_id": "Thread-2", "execution_time": 0.38068199157714844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history_tmp", "compiled": true, "compiled_code": "select `field_name`,\n  `ticket_id`,\n  `updated`,\n  `_fivetran_synced`,\n  `user_id`,\n  `value`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_field_history_data` as ticket_field_history_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_field_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.031199Z", "completed_at": "2023-12-07T23:08:46.439094Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.439834Z", "completed_at": "2023-12-07T23:08:46.439841Z"}], "thread_id": "Thread-3", "execution_time": 0.41092801094055176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `body`,\n  `created`,\n  `facebook_comment`,\n  `public`,\n  `ticket_id`,\n  `tweet`,\n  `user_id`,\n  `voice_comment`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_comment_data` as ticket_comment_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.070684Z", "completed_at": "2023-12-07T23:08:46.463368Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.464042Z", "completed_at": "2023-12-07T23:08:46.464049Z"}], "thread_id": "Thread-1", "execution_time": 0.39945387840270996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\n\n\nselect `created_at`,\n  `ticket_id`,\n  `_fivetran_synced`,\n  `schedule_id`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_schedule_data` as ticket_schedule_table\n\n", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_schedule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.442412Z", "completed_at": "2023-12-07T23:08:46.901131Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.902573Z", "completed_at": "2023-12-07T23:08:46.902593Z"}], "thread_id": "Thread-3", "execution_time": 0.4624300003051758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `time_zone`,\n  `_fivetran_synced`,\n  `standard_offset` \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`time_zone_data` as time_zone_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.432190Z", "completed_at": "2023-12-07T23:08:46.904537Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.908996Z", "completed_at": "2023-12-07T23:08:46.909004Z"}], "thread_id": "Thread-2", "execution_time": 0.47998785972595215, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `allow_channelback`,\n  `assignee_id`,\n  `brand_id`,\n  `created_at`,\n  `description`,\n  `due_at`,\n  `external_id`,\n  `forum_topic_id`,\n  `group_id`,\n  `has_incidents`,\n  `is_public`,\n  `organization_id`,\n  `priority`,\n  `problem_id`,\n  `recipient`,\n  `requester_id`,\n  `status`,\n  `subject`,\n  `submitter_id`,\n  `system_client`,\n  `ticket_form_id`,\n  `type`,\n  `updated_at`,\n  `url`,\n  `via_channel`,\n  `via_source_from_id`,\n  `via_source_from_title`,\n  `via_source_rel`,\n  `via_source_to_address`,\n  `via_source_to_name`,\n  `merged_ticket_ids`,\n  `via_source_from_address`,\n  `followup_ids`,\n  `via_followup_source_id`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_data` as ticket_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.412351Z", "completed_at": "2023-12-07T23:08:46.905138Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.909903Z", "completed_at": "2023-12-07T23:08:46.909910Z"}], "thread_id": "Thread-4", "execution_time": 0.5020179748535156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag_tmp", "compiled": true, "compiled_code": "select `tag`,\n  `ticket_id`,\n  `_fivetran_synced`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_tag_data` as ticket_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.466339Z", "completed_at": "2023-12-07T23:08:46.906918Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.911758Z", "completed_at": "2023-12-07T23:08:46.911763Z"}], "thread_id": "Thread-1", "execution_time": 0.5029902458190918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nselect `tag`,\n  `user_id`,\n  `_fivetran_synced`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`user_tag_data` as user_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.985715Z", "completed_at": "2023-12-07T23:08:46.986823Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.991101Z", "completed_at": "2023-12-07T23:08:46.991107Z"}], "thread_id": "Thread-2", "execution_time": 0.021585941314697266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.brand_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.987575Z", "completed_at": "2023-12-07T23:08:46.988659Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.991963Z", "completed_at": "2023-12-07T23:08:46.991967Z"}], "thread_id": "Thread-4", "execution_time": 0.019621849060058594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.daylight_time_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.989438Z", "completed_at": "2023-12-07T23:08:46.990505Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:46.992753Z", "completed_at": "2023-12-07T23:08:46.992757Z"}], "thread_id": "Thread-1", "execution_time": 0.009163856506347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.domain_name_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.996402Z", "completed_at": "2023-12-07T23:08:46.997562Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.001880Z", "completed_at": "2023-12-07T23:08:47.001884Z"}], "thread_id": "Thread-2", "execution_time": 0.008162736892700195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.group_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.998052Z", "completed_at": "2023-12-07T23:08:46.999858Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.002339Z", "completed_at": "2023-12-07T23:08:47.002342Z"}], "thread_id": "Thread-4", "execution_time": 0.00826716423034668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.000358Z", "completed_at": "2023-12-07T23:08:47.001397Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.003090Z", "completed_at": "2023-12-07T23:08:47.003093Z"}], "thread_id": "Thread-1", "execution_time": 0.00838923454284668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.006537Z", "completed_at": "2023-12-07T23:08:47.007698Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.011327Z", "completed_at": "2023-12-07T23:08:47.011331Z"}], "thread_id": "Thread-2", "execution_time": 0.007467985153198242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.008209Z", "completed_at": "2023-12-07T23:08:47.009261Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.011798Z", "completed_at": "2023-12-07T23:08:47.011801Z"}], "thread_id": "Thread-4", "execution_time": 0.007580757141113281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_holiday_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.009757Z", "completed_at": "2023-12-07T23:08:47.010817Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.012551Z", "completed_at": "2023-12-07T23:08:47.012554Z"}], "thread_id": "Thread-1", "execution_time": 0.0077228546142578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.016251Z", "completed_at": "2023-12-07T23:08:47.018144Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.021949Z", "completed_at": "2023-12-07T23:08:47.021956Z"}], "thread_id": "Thread-2", "execution_time": 0.008666038513183594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.018704Z", "completed_at": "2023-12-07T23:08:47.019787Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.022517Z", "completed_at": "2023-12-07T23:08:47.022520Z"}], "thread_id": "Thread-4", "execution_time": 0.008835077285766602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_field_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.020309Z", "completed_at": "2023-12-07T23:08:47.021392Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.023389Z", "completed_at": "2023-12-07T23:08:47.023392Z"}], "thread_id": "Thread-1", "execution_time": 0.009077072143554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_form_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.027168Z", "completed_at": "2023-12-07T23:08:47.028375Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.031984Z", "completed_at": "2023-12-07T23:08:47.031988Z"}], "thread_id": "Thread-2", "execution_time": 0.0075757503509521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.028906Z", "completed_at": "2023-12-07T23:08:47.029970Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.032475Z", "completed_at": "2023-12-07T23:08:47.032478Z"}], "thread_id": "Thread-4", "execution_time": 0.008554935455322266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.030458Z", "completed_at": "2023-12-07T23:08:47.031504Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.033245Z", "completed_at": "2023-12-07T23:08:47.033248Z"}], "thread_id": "Thread-1", "execution_time": 0.008683919906616211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.time_zone_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.037687Z", "completed_at": "2023-12-07T23:08:47.038816Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.043815Z", "completed_at": "2023-12-07T23:08:47.043820Z"}], "thread_id": "Thread-2", "execution_time": 0.009282827377319336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.039308Z", "completed_at": "2023-12-07T23:08:47.040349Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.044609Z", "completed_at": "2023-12-07T23:08:47.044613Z"}], "thread_id": "Thread-4", "execution_time": 0.009252309799194336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.040853Z", "completed_at": "2023-12-07T23:08:47.383987Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.385514Z", "completed_at": "2023-12-07T23:08:47.385523Z"}], "thread_id": "Thread-1", "execution_time": 0.3494861125946045, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    domain_name\n    \n as \n    \n    domain_name\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        domain_name,\n        index\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.048264Z", "completed_at": "2023-12-07T23:08:47.384446Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.385903Z", "completed_at": "2023-12-07T23:08:47.385907Z"}], "thread_id": "Thread-2", "execution_time": 0.34033894538879395, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    daylight_end_utc\n    \n as \n    \n    daylight_end_utc\n    \n, \n    \n    \n    daylight_offset\n    \n as \n    \n    daylight_offset\n    \n, \n    \n    \n    daylight_start_utc\n    \n as \n    \n    daylight_start_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    year\n    \n as \n    \n    year\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        daylight_end_utc,\n        daylight_offset,\n        daylight_start_utc,\n        time_zone,\n        year,\n        daylight_offset * 60 as daylight_offset_minutes\n        \n    from fields\n)\n\nselect * from final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:46.913139Z", "completed_at": "2023-12-07T23:08:47.405623Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.406280Z", "completed_at": "2023-12-07T23:08:47.406287Z"}], "thread_id": "Thread-3", "execution_time": 0.4987452030181885, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `active`,\n  `alias`,\n  `authenticity_token`,\n  `chat_only`,\n  `created_at`,\n  `details`,\n  `email`,\n  `external_id`,\n  `last_login_at`,\n  `locale`,\n  `locale_id`,\n  `moderator`,\n  `name`,\n  `notes`,\n  `only_private_comments`,\n  `organization_id`,\n  `phone`,\n  `remote_photo_url`,\n  `restricted_agent`,\n  `role`,\n  `shared`,\n  `shared_agent`,\n  `signature`,\n  `suspended`,\n  `ticket_restriction`,\n  `time_zone`,\n  `two_factor_auth_enabled`,\n  `updated_at`,\n  `url`,\n  `verified`   \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`user_data` as user_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.051155Z", "completed_at": "2023-12-07T23:08:47.464478Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.465070Z", "completed_at": "2023-12-07T23:08:47.465076Z"}], "thread_id": "Thread-4", "execution_time": 0.41817808151245117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    brand_url\n    \n as \n    \n    brand_url\n    \n, \n    \n    \n    has_help_center\n    \n as \n    \n    has_help_center\n    \n, \n    \n    \n    help_center_state\n    \n as \n    \n    help_center_state\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    logo_content_type\n    \n as \n    \n    logo_content_type\n    \n, \n    \n    \n    logo_content_url\n    \n as \n    \n    logo_content_url\n    \n, \n    \n    \n    logo_deleted\n    \n as \n    \n    logo_deleted\n    \n, \n    \n    \n    logo_file_name\n    \n as \n    \n    logo_file_name\n    \n, \n    \n    \n    logo_height\n    \n as \n    \n    logo_height\n    \n, \n    \n    \n    logo_id\n    \n as \n    \n    logo_id\n    \n, \n    \n    \n    logo_inline\n    \n as \n    \n    logo_inline\n    \n, \n    \n    \n    logo_mapped_content_url\n    \n as \n    \n    logo_mapped_content_url\n    \n, \n    \n    \n    logo_size\n    \n as \n    \n    logo_size\n    \n, \n    \n    \n    logo_url\n    \n as \n    \n    logo_url\n    \n, \n    \n    \n    logo_width\n    \n as \n    \n    logo_width\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subdomain\n    \n as \n    \n    subdomain\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as brand_id,\n        brand_url,\n        name,\n        subdomain,\n        active as is_active\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.467038Z", "completed_at": "2023-12-07T23:08:47.833158Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.833956Z", "completed_at": "2023-12-07T23:08:47.833965Z"}], "thread_id": "Thread-4", "execution_time": 0.36835765838623047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    end_time_utc\n    \n as \n    \n    end_time_utc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    start_time_utc\n    \n as \n    \n    start_time_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as string) as schedule_id, --need to convert from numeric to string for downstream models to work properly\n        end_time,\n        start_time,\n        name as schedule_name,\n        created_at,\n        time_zone\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.393724Z", "completed_at": "2023-12-07T23:08:47.835379Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.838088Z", "completed_at": "2023-12-07T23:08:47.838093Z"}], "thread_id": "Thread-2", "execution_time": 0.45452213287353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.390245Z", "completed_at": "2023-12-07T23:08:47.835766Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.838431Z", "completed_at": "2023-12-07T23:08:47.838435Z"}], "thread_id": "Thread-1", "execution_time": 0.4558529853820801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as group_id,\n        name\n    from fields\n    \n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.408370Z", "completed_at": "2023-12-07T23:08:47.836592Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:47.843106Z", "completed_at": "2023-12-07T23:08:47.843111Z"}], "thread_id": "Thread-3", "execution_time": 0.4379761219024658, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    shared_comments\n    \n as \n    \n    shared_comments\n    \n, \n    \n    \n    shared_tickets\n    \n as \n    \n    shared_tickets\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        created_at,\n        updated_at,\n        details,\n        name,\n        external_id\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.850613Z", "completed_at": "2023-12-07T23:08:48.209635Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.211825Z", "completed_at": "2023-12-07T23:08:48.211843Z"}], "thread_id": "Thread-2", "execution_time": 0.36542391777038574, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    end_user_visible\n    \n as \n    \n    end_user_visible\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_form_id,\n        created_at,\n            updated_at,\n        \n        display_name,\n        active as is_active,\n        name\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n    \n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.852167Z", "completed_at": "2023-12-07T23:08:48.210219Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.212324Z", "completed_at": "2023-12-07T23:08:48.212329Z"}], "thread_id": "Thread-1", "execution_time": 0.3655838966369629, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_field_history_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    field_name\n    \n as \n    \n    field_name\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        field_name,\n        updated as valid_starting_at,\n            lead(updated) over (partition by ticket_id, field_name order by updated) as valid_ending_at,\n        \n        value,\n        user_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_field_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.838766Z", "completed_at": "2023-12-07T23:08:48.252305Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.253087Z", "completed_at": "2023-12-07T23:08:48.253095Z"}], "thread_id": "Thread-4", "execution_time": 0.41761088371276855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp ) as _fivetran_synced,\n        cast(end_date as timestamp ) as holiday_end_date_at,\n        cast(id as string ) as holiday_id,\n        name as holiday_name,\n        cast(schedule_id as string ) as schedule_id,\n        cast(start_date as timestamp ) as holiday_start_date_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:47.858950Z", "completed_at": "2023-12-07T23:08:48.281317Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.281895Z", "completed_at": "2023-12-07T23:08:48.281901Z"}], "thread_id": "Thread-3", "execution_time": 0.4333181381225586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    cast(null as INT64) as \n    \n    call_duration\n    \n , \n    cast(null as INT64) as \n    \n    call_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    facebook_comment\n    \n as \n    \n    facebook_comment\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as INT64) as \n    \n    location\n    \n , \n    \n    \n    public\n    \n as \n    \n    public\n    \n, \n    cast(null as INT64) as \n    \n    recording_url\n    \n , \n    cast(null as timestamp) as \n    \n    started_at\n    \n , \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    cast(null as INT64) as \n    \n    transcription_status\n    \n , \n    cast(null as INT64) as \n    \n    transcription_text\n    \n , \n    cast(null as INT64) as \n    \n    trusted\n    \n , \n    \n    \n    tweet\n    \n as \n    \n    tweet\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    voice_comment\n    \n as \n    \n    voice_comment\n    \n, \n    cast(null as INT64) as \n    \n    voice_comment_transcription_visible\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_comment_id,\n        _fivetran_synced,\n        body,\n        created as created_at,\n        \n        public as is_public,\n        ticket_id,\n        user_id,\n        facebook_comment as is_facebook_comment,\n        tweet as is_tweet,\n        voice_comment as is_voice_comment\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.223011Z", "completed_at": "2023-12-07T23:08:48.634676Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.635771Z", "completed_at": "2023-12-07T23:08:48.635789Z"}], "thread_id": "Thread-1", "execution_time": 0.42076611518859863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    standard_offset\n    \n as \n    \n    standard_offset\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        standard_offset,\n        time_zone,\n        -- the standard_offset is a string written as [+/-]HH:MM\n        -- let's convert it to an integer value of minutes\n        cast( \n\n  \n    split(\n        standard_offset,\n        ':'\n        )[safe_offset(0)]\n  \n\n as INT64 ) * 60 +\n            (cast( \n\n  \n    split(\n        standard_offset,\n        ':'\n        )[safe_offset(1)]\n  \n\n as INT64 ) *\n                (case when standard_offset like '-%' then -1 else 1 end) ) as standard_offset_minutes\n    \n    from fields\n)\n\nselect * from final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.217717Z", "completed_at": "2023-12-07T23:08:48.636264Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.638748Z", "completed_at": "2023-12-07T23:08:48.638755Z"}], "thread_id": "Thread-2", "execution_time": 0.42456603050231934, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_schedule_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        created_at,\n        \n        cast(schedule_id as string) as schedule_id --need to convert from numeric to string for downstream models to work properly\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_schedule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.255450Z", "completed_at": "2023-12-07T23:08:48.689147Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.689917Z", "completed_at": "2023-12-07T23:08:48.689924Z"}], "thread_id": "Thread-4", "execution_time": 0.4360508918762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allow_channelback\n    \n as \n    \n    allow_channelback\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_at\n    \n as \n    \n    due_at\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    forum_topic_id\n    \n as \n    \n    forum_topic_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    has_incidents\n    \n as \n    \n    has_incidents\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_public\n    \n as \n    \n    is_public\n    \n, \n    \n    \n    merged_ticket_ids\n    \n as \n    \n    merged_ticket_ids\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    problem_id\n    \n as \n    \n    problem_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    requester_id\n    \n as \n    \n    requester_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    submitter_id\n    \n as \n    \n    submitter_id\n    \n, \n    cast(null as INT64) as \n    \n    system_ccs\n    \n , \n    \n    \n    system_client\n    \n as \n    \n    system_client\n    \n, \n    cast(null as string) as \n    \n    system_ip_address\n    \n , \n    cast(null as INT64) as \n    \n    system_json_email_identifier\n    \n , \n    cast(null as FLOAT64) as \n    \n    system_latitude\n    \n , \n    cast(null as string) as \n    \n    system_location\n    \n , \n    cast(null as FLOAT64) as \n    \n    system_longitude\n    \n , \n    cast(null as INT64) as \n    \n    system_machine_generated\n    \n , \n    cast(null as INT64) as \n    \n    system_message_id\n    \n , \n    cast(null as INT64) as \n    \n    system_raw_email_identifier\n    \n , \n    \n    \n    ticket_form_id\n    \n as \n    \n    ticket_form_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    via_channel\n    \n as \n    \n    via_channel\n    \n, \n    \n    \n    via_source_from_address\n    \n as \n    \n    via_source_from_address\n    \n, \n    \n    \n    via_source_from_id\n    \n as \n    \n    via_source_from_id\n    \n, \n    \n    \n    via_source_from_title\n    \n as \n    \n    via_source_from_title\n    \n, \n    \n    \n    via_source_rel\n    \n as \n    \n    via_source_rel\n    \n, \n    \n    \n    via_source_to_address\n    \n as \n    \n    via_source_to_address\n    \n, \n    \n    \n    via_source_to_name\n    \n as \n    \n    via_source_to_name\n    \n\n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_id,\n        _fivetran_synced,\n        assignee_id,\n        brand_id,\n        created_at,\n            updated_at,\n        \n        description,\n        due_at,\n        group_id,\n        external_id,\n        is_public,\n        organization_id,\n        priority,\n        recipient,\n        requester_id,\n        status,\n        subject,\n        problem_id,\n        submitter_id,\n        ticket_form_id,\n        type,\n        url,\n        via_channel as created_channel,\n        via_source_from_id as source_from_id,\n        via_source_from_title as source_from_title,\n        via_source_rel as source_rel,\n        via_source_to_address as source_to_address,\n        via_source_to_name as source_to_name\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.283784Z", "completed_at": "2023-12-07T23:08:48.690207Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.692250Z", "completed_at": "2023-12-07T23:08:48.692254Z"}], "thread_id": "Thread-3", "execution_time": 0.4103059768676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        \n        tag as tags\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.680741Z", "completed_at": "2023-12-07T23:08:48.691068Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.692946Z", "completed_at": "2023-12-07T23:08:48.692950Z"}], "thread_id": "Thread-2", "execution_time": 0.0470728874206543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__domain_name_organization_id.a2b5ff8fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name`\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.694768Z", "completed_at": "2023-12-07T23:08:48.709706Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.710599Z", "completed_at": "2023-12-07T23:08:48.710604Z"}], "thread_id": "Thread-4", "execution_time": 0.018576860427856445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.dbt_utils_unique_combination_of_columns_stg_zendesk__daylight_time_time_zone__year.88227aef3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        time_zone, year\n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time`\n    group by time_zone, year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.706619Z", "completed_at": "2023-12-07T23:08:48.716763Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.717512Z", "completed_at": "2023-12-07T23:08:48.717517Z"}], "thread_id": "Thread-2", "execution_time": 0.01592111587524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__brand_brand_id.a2419e1741", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect brand_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand`\nwhere brand_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.712598Z", "completed_at": "2023-12-07T23:08:48.719310Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.722854Z", "completed_at": "2023-12-07T23:08:48.722859Z"}], "thread_id": "Thread-4", "execution_time": 0.011482954025268555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__brand_brand_id.fdf8e23c9e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select brand_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand`\n  where brand_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.719587Z", "completed_at": "2023-12-07T23:08:48.727395Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.727894Z", "completed_at": "2023-12-07T23:08:48.727898Z"}], "thread_id": "Thread-2", "execution_time": 0.00968027114868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__group_group_id.7659ed83ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect group_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group`\nwhere group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.724527Z", "completed_at": "2023-12-07T23:08:48.733120Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.733630Z", "completed_at": "2023-12-07T23:08:48.733634Z"}], "thread_id": "Thread-4", "execution_time": 0.010146141052246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__group_group_id.f0658dabcd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select group_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group`\n  where group_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.729575Z", "completed_at": "2023-12-07T23:08:48.738279Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.738795Z", "completed_at": "2023-12-07T23:08:48.738800Z"}], "thread_id": "Thread-2", "execution_time": 0.010355234146118164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__organization_organization_id.de7b98c06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization`\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.735263Z", "completed_at": "2023-12-07T23:08:48.740474Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.744073Z", "completed_at": "2023-12-07T23:08:48.744079Z"}], "thread_id": "Thread-4", "execution_time": 0.009947776794433594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__organization_organization_id.152be1ab31", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select organization_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization`\n  where organization_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.740768Z", "completed_at": "2023-12-07T23:08:48.748821Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.749358Z", "completed_at": "2023-12-07T23:08:48.749363Z"}], "thread_id": "Thread-2", "execution_time": 0.009945154190063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_form_history_ticket_form_id.1afe781a17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_form_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history`\nwhere ticket_form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.745827Z", "completed_at": "2023-12-07T23:08:48.751009Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.754370Z", "completed_at": "2023-12-07T23:08:48.754374Z"}], "thread_id": "Thread-4", "execution_time": 0.009611845016479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__schedule_holiday_holiday_id.52eb08f782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday`\nwhere holiday_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.751278Z", "completed_at": "2023-12-07T23:08:48.759672Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.760171Z", "completed_at": "2023-12-07T23:08:48.760175Z"}], "thread_id": "Thread-2", "execution_time": 0.010202884674072266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__schedule_holiday_holiday_id.0341d5635a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select holiday_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday`\n  where holiday_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.756058Z", "completed_at": "2023-12-07T23:08:48.761913Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.765514Z", "completed_at": "2023-12-07T23:08:48.765519Z"}], "thread_id": "Thread-4", "execution_time": 0.010524272918701172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_comment_ticket_comment_id.b821f4a606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_comment_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment`\nwhere ticket_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.762185Z", "completed_at": "2023-12-07T23:08:48.770207Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.770711Z", "completed_at": "2023-12-07T23:08:48.770715Z"}], "thread_id": "Thread-2", "execution_time": 0.009863138198852539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_comment_ticket_comment_id.ba353330cd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_comment_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment`\n  where ticket_comment_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.767211Z", "completed_at": "2023-12-07T23:08:48.772328Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.775740Z", "completed_at": "2023-12-07T23:08:48.775745Z"}], "thread_id": "Thread-4", "execution_time": 0.00962209701538086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__time_zone_time_zone.b25b3452b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_zone\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone`\nwhere time_zone is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.772604Z", "completed_at": "2023-12-07T23:08:48.780319Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.780824Z", "completed_at": "2023-12-07T23:08:48.780828Z"}], "thread_id": "Thread-2", "execution_time": 0.009519100189208984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__time_zone_time_zone.67995adbaf", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select time_zone as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone`\n  where time_zone is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.777368Z", "completed_at": "2023-12-07T23:08:48.781573Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.782773Z", "completed_at": "2023-12-07T23:08:48.782778Z"}], "thread_id": "Thread-4", "execution_time": 0.006746053695678711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_ticket_id.a8229e6981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket`\nwhere ticket_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.783794Z", "completed_at": "2023-12-07T23:08:48.787643Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:48.788139Z", "completed_at": "2023-12-07T23:08:48.788143Z"}], "thread_id": "Thread-2", "execution_time": 0.006201982498168945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_ticket_id.4be7124521", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket`\n  where ticket_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.641620Z", "completed_at": "2023-12-07T23:08:49.108732Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:49.109579Z", "completed_at": "2023-12-07T23:08:49.109589Z"}], "thread_id": "Thread-1", "execution_time": 0.47090888023376465, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        user_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:48.702959Z", "completed_at": "2023-12-07T23:08:49.110724Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:49.111523Z", "completed_at": "2023-12-07T23:08:49.111528Z"}], "thread_id": "Thread-3", "execution_time": 0.41051697731018066, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    authenticity_token\n    \n as \n    \n    authenticity_token\n    \n, \n    \n    \n    chat_only\n    \n as \n    \n    chat_only\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_login_at\n    \n as \n    \n    last_login_at\n    \n, \n    \n    \n    locale\n    \n as \n    \n    locale\n    \n, \n    \n    \n    locale_id\n    \n as \n    \n    locale_id\n    \n, \n    \n    \n    moderator\n    \n as \n    \n    moderator\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    only_private_comments\n    \n as \n    \n    only_private_comments\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    remote_photo_url\n    \n as \n    \n    remote_photo_url\n    \n, \n    \n    \n    restricted_agent\n    \n as \n    \n    restricted_agent\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    shared\n    \n as \n    \n    shared\n    \n, \n    \n    \n    shared_agent\n    \n as \n    \n    shared_agent\n    \n, \n    \n    \n    signature\n    \n as \n    \n    signature\n    \n, \n    \n    \n    suspended\n    \n as \n    \n    suspended\n    \n, \n    \n    \n    ticket_restriction\n    \n as \n    \n    ticket_restriction\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    two_factor_auth_enabled\n    \n as \n    \n    two_factor_auth_enabled\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n        \n    from base\n),\n\nfinal as ( \n    \n    select \n        id as user_id,\n        external_id,\n        _fivetran_synced,\n        last_login_at,\n            created_at,\n            updated_at,\n        email,\n        name,\n        organization_id,\n        role,\n        ticket_restriction,\n        time_zone,\n        locale,\n        active as is_active,\n        suspended as is_suspended\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:49.115311Z", "completed_at": "2023-12-07T23:08:49.123372Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:49.124609Z", "completed_at": "2023-12-07T23:08:49.124614Z"}], "thread_id": "Thread-4", "execution_time": 0.011809110641479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__user_user_id.102d572926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-12-07T23:08:49.119499Z", "completed_at": "2023-12-07T23:08:49.123721Z"}, {"name": "execute", "started_at": "2023-12-07T23:08:49.124910Z", "completed_at": "2023-12-07T23:08:49.124913Z"}], "thread_id": "Thread-2", "execution_time": 0.011775016784667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__user_user_id.3d3e346b11", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select user_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user`\n  where user_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 4.976836204528809, "args": {"vars": {}, "introspect": true, "cache_selected_only": false, "indirect_selection": "eager", "exclude": [], "write_json": true, "use_colors": true, "log_format_file": "debug", "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Zendesk/dbt_zendesk_source/integration_tests/logs", "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Zendesk/dbt_zendesk_source/integration_tests", "select": [], "printer_width": 80, "enable_legacy_logger": false, "strict_mode": false, "static_parser": true, "version_check": true, "empty_catalog": false, "profiles_dir": "/Users/jamie.rodriguez/.dbt", "partial_parse_file_diff": true, "print": true, "show_resource_report": false, "which": "generate", "partial_parse": true, "defer": false, "warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "quiet": false, "static": false, "log_level_file": "debug", "populate_cache": true, "use_colors_file": true, "favor_state": false, "send_anonymous_usage_stats": true, "log_level": "info", "invocation_command": "dbt docs generate", "compile": true, "macro_debugging": false, "log_file_max_bytes": 10485760}}