{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.4", "generated_at": "2024-01-10T12:48:13.258820Z", "invocation_id": "353395f5-c5ae-4ed0-a9c5-dacf7c9227d0", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.497693Z", "completed_at": "2024-01-10T12:48:09.804964Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:09.806037Z", "completed_at": "2024-01-10T12:48:09.806065Z"}], "thread_id": "Thread-3", "execution_time": 0.34473490715026855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nselect `index`,\n  `organization_id`,\n  `_fivetran_synced`,\n  `domain_name` \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`domain_name_data` as domain_name_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.493662Z", "completed_at": "2024-01-10T12:48:09.851684Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:09.852583Z", "completed_at": "2024-01-10T12:48:09.852593Z"}], "thread_id": "Thread-2", "execution_time": 0.3919098377227783, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `time_zone`,\n  `year`,\n  `_fivetran_synced`,\n  `daylight_end_utc`,\n  `daylight_offset`,\n  `daylight_start_utc`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`daylight_time_data` as daylight_time_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.465200Z", "completed_at": "2024-01-10T12:48:09.897463Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:09.898224Z", "completed_at": "2024-01-10T12:48:09.898231Z"}], "thread_id": "Thread-1", "execution_time": 0.4389150142669678, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `active`,\n  `brand_url`,\n  `default`,\n  `has_help_center`,\n  `help_center_state`,\n  `logo_content_type`,\n  `logo_content_url`,\n  `logo_deleted`,\n  `logo_file_name`,\n  `logo_height`,\n  `logo_id`,\n  `logo_inline`,\n  `logo_mapped_content_url`,\n  `logo_size`,\n  `logo_url`,\n  `logo_width`,\n  `name`,\n  `subdomain`,\n  `url`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`brand_data` as brand_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.501247Z", "completed_at": "2024-01-10T12:48:09.918683Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:09.919346Z", "completed_at": "2024-01-10T12:48:09.919353Z"}], "thread_id": "Thread-4", "execution_time": 0.45638513565063477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `created_at`,\n  `name`,\n  `updated_at`,\n  `url`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`group_data` as group_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.809557Z", "completed_at": "2024-01-10T12:48:10.215797Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.217834Z", "completed_at": "2024-01-10T12:48:10.217860Z"}], "thread_id": "Thread-3", "execution_time": 0.4109981060028076, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nselect `organization_id`,\n  `tag`,\n  `_fivetran_synced`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`organization_tag_data` as organization_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.900679Z", "completed_at": "2024-01-10T12:48:10.236312Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.237270Z", "completed_at": "2024-01-10T12:48:10.237280Z"}], "thread_id": "Thread-1", "execution_time": 0.338360071182251, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `id`,\n  `schedule_id`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `end_date`,\n  `name`,\n  `start_date`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`schedule_holiday_data` as schedule_holiday_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.855361Z", "completed_at": "2024-01-10T12:48:10.310175Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.311127Z", "completed_at": "2024-01-10T12:48:10.311138Z"}], "thread_id": "Thread-2", "execution_time": 0.4576578140258789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `created_at`,\n  `details`,\n  `external_id`,\n  `group_id`,\n  `name`,\n  `notes`,\n  `shared_comments`,\n  `shared_tickets`,\n  `updated_at`,\n  `url`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`organization_data` as organization_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:09.921584Z", "completed_at": "2024-01-10T12:48:10.433258Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.434527Z", "completed_at": "2024-01-10T12:48:10.434542Z"}], "thread_id": "Thread-4", "execution_time": 0.514916181564331, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `end_time`,\n  `id`,\n  `start_time`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `end_time_utc`,\n  `name`,\n  `start_time_utc`,\n  `time_zone`,\n  `created_at`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`schedule_data` as schedule_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.226501Z", "completed_at": "2024-01-10T12:48:10.627021Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.628814Z", "completed_at": "2024-01-10T12:48:10.628848Z"}], "thread_id": "Thread-3", "execution_time": 0.40949392318725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `body`,\n  `created`,\n  `facebook_comment`,\n  `public`,\n  `ticket_id`,\n  `tweet`,\n  `user_id`,\n  `voice_comment`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_comment_data` as ticket_comment_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.240514Z", "completed_at": "2024-01-10T12:48:10.644405Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.645384Z", "completed_at": "2024-01-10T12:48:10.645393Z"}], "thread_id": "Thread-1", "execution_time": 0.40700221061706543, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history_tmp", "compiled": true, "compiled_code": "select `field_name`,\n  `ticket_id`,\n  `updated`,\n  `_fivetran_synced`,\n  `user_id`,\n  `value`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_field_history_data` as ticket_field_history_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_field_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.314104Z", "completed_at": "2024-01-10T12:48:10.673113Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.673849Z", "completed_at": "2024-01-10T12:48:10.673856Z"}], "thread_id": "Thread-2", "execution_time": 0.361375093460083, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nselect `id`,\n  `updated_at`,\n  `_fivetran_deleted`,\n  `_fivetran_synced`,\n  `active`,\n  `created_at`,\n  `display_name`,\n  `end_user_visible`,\n  `name`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_form_history_data` as ticket_form_history_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.438906Z", "completed_at": "2024-01-10T12:48:10.847589Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:10.849430Z", "completed_at": "2024-01-10T12:48:10.849452Z"}], "thread_id": "Thread-4", "execution_time": 0.4137730598449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\n\n\nselect `created_at`,\n  `ticket_id`,\n  `_fivetran_synced`,\n  `schedule_id`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_schedule_data` as ticket_schedule_table\n\n", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_schedule_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.648861Z", "completed_at": "2024-01-10T12:48:11.004291Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.004900Z", "completed_at": "2024-01-10T12:48:11.004908Z"}], "thread_id": "Thread-1", "execution_time": 0.35781192779541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `allow_channelback`,\n  `assignee_id`,\n  `brand_id`,\n  `created_at`,\n  `description`,\n  `due_at`,\n  `external_id`,\n  `forum_topic_id`,\n  `group_id`,\n  `has_incidents`,\n  `is_public`,\n  `organization_id`,\n  `priority`,\n  `problem_id`,\n  `recipient`,\n  `requester_id`,\n  `status`,\n  `subject`,\n  `submitter_id`,\n  `system_client`,\n  `ticket_form_id`,\n  `type`,\n  `updated_at`,\n  `url`,\n  `via_channel`,\n  `via_source_from_id`,\n  `via_source_from_title`,\n  `via_source_rel`,\n  `via_source_to_address`,\n  `via_source_to_name`,\n  `merged_ticket_ids`,\n  `via_source_from_address`,\n  `followup_ids`,\n  `via_followup_source_id`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_data` as ticket_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.676285Z", "completed_at": "2024-01-10T12:48:11.055709Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.056386Z", "completed_at": "2024-01-10T12:48:11.056394Z"}], "thread_id": "Thread-2", "execution_time": 0.38161206245422363, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect `time_zone`,\n  `_fivetran_synced`,\n  `standard_offset` \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`time_zone_data` as time_zone_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.058581Z", "completed_at": "2024-01-10T12:48:11.060167Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.060788Z", "completed_at": "2024-01-10T12:48:11.060793Z"}], "thread_id": "Thread-2", "execution_time": 0.0034880638122558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.brand_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.062641Z", "completed_at": "2024-01-10T12:48:11.063949Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.064504Z", "completed_at": "2024-01-10T12:48:11.064508Z"}], "thread_id": "Thread-2", "execution_time": 0.0030431747436523438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.daylight_time_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.066316Z", "completed_at": "2024-01-10T12:48:11.067713Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.068348Z", "completed_at": "2024-01-10T12:48:11.068353Z"}], "thread_id": "Thread-2", "execution_time": 0.0032367706298828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.domain_name_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.070275Z", "completed_at": "2024-01-10T12:48:11.071588Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.072147Z", "completed_at": "2024-01-10T12:48:11.072151Z"}], "thread_id": "Thread-2", "execution_time": 0.00397801399230957, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.group_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.074856Z", "completed_at": "2024-01-10T12:48:11.076081Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.076621Z", "completed_at": "2024-01-10T12:48:11.076625Z"}], "thread_id": "Thread-2", "execution_time": 0.0029458999633789062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.078351Z", "completed_at": "2024-01-10T12:48:11.079542Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.080062Z", "completed_at": "2024-01-10T12:48:11.080066Z"}], "thread_id": "Thread-2", "execution_time": 0.002810955047607422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.081675Z", "completed_at": "2024-01-10T12:48:11.082818Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.083346Z", "completed_at": "2024-01-10T12:48:11.083350Z"}], "thread_id": "Thread-2", "execution_time": 0.002711057662963867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.084980Z", "completed_at": "2024-01-10T12:48:11.086112Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.086602Z", "completed_at": "2024-01-10T12:48:11.086606Z"}], "thread_id": "Thread-2", "execution_time": 0.0026619434356689453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_holiday_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.088279Z", "completed_at": "2024-01-10T12:48:11.089363Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.089841Z", "completed_at": "2024-01-10T12:48:11.089844Z"}], "thread_id": "Thread-2", "execution_time": 0.0026807785034179688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.091422Z", "completed_at": "2024-01-10T12:48:11.093257Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.093739Z", "completed_at": "2024-01-10T12:48:11.093742Z"}], "thread_id": "Thread-2", "execution_time": 0.0033469200134277344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.095304Z", "completed_at": "2024-01-10T12:48:11.096428Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.096911Z", "completed_at": "2024-01-10T12:48:11.096914Z"}], "thread_id": "Thread-2", "execution_time": 0.0026311874389648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_field_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.099355Z", "completed_at": "2024-01-10T12:48:11.100552Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.101109Z", "completed_at": "2024-01-10T12:48:11.101113Z"}], "thread_id": "Thread-2", "execution_time": 0.003680706024169922, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_form_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.102726Z", "completed_at": "2024-01-10T12:48:11.103835Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.104337Z", "completed_at": "2024-01-10T12:48:11.104341Z"}], "thread_id": "Thread-2", "execution_time": 0.0026280879974365234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.105869Z", "completed_at": "2024-01-10T12:48:11.106987Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.107454Z", "completed_at": "2024-01-10T12:48:11.107458Z"}], "thread_id": "Thread-2", "execution_time": 0.0025758743286132812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.108971Z", "completed_at": "2024-01-10T12:48:11.110741Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.111215Z", "completed_at": "2024-01-10T12:48:11.111219Z"}], "thread_id": "Thread-2", "execution_time": 0.0032329559326171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.time_zone_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.112732Z", "completed_at": "2024-01-10T12:48:11.113822Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.114406Z", "completed_at": "2024-01-10T12:48:11.114410Z"}], "thread_id": "Thread-2", "execution_time": 0.002685070037841797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.115962Z", "completed_at": "2024-01-10T12:48:11.117061Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.117532Z", "completed_at": "2024-01-10T12:48:11.117536Z"}], "thread_id": "Thread-2", "execution_time": 0.0025746822357177734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.634572Z", "completed_at": "2024-01-10T12:48:11.122542Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.123031Z", "completed_at": "2024-01-10T12:48:11.123035Z"}], "thread_id": "Thread-3", "execution_time": 0.49123406410217285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag_tmp", "compiled": true, "compiled_code": "select `tag`,\n  `ticket_id`,\n  `_fivetran_synced`\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`ticket_tag_data` as ticket_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:10.854347Z", "completed_at": "2024-01-10T12:48:11.304530Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.305843Z", "completed_at": "2024-01-10T12:48:11.305862Z"}], "thread_id": "Thread-4", "execution_time": 0.45438480377197266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nselect `tag`,\n  `user_id`,\n  `_fivetran_synced`  \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`user_tag_data` as user_tag_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tag_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.006941Z", "completed_at": "2024-01-10T12:48:11.383497Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.384322Z", "completed_at": "2024-01-10T12:48:11.384332Z"}], "thread_id": "Thread-1", "execution_time": 0.37883615493774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tmp", "compiled": true, "compiled_code": "select `id`,\n  `_fivetran_synced`,\n  `active`,\n  `alias`,\n  `authenticity_token`,\n  `chat_only`,\n  `created_at`,\n  `details`,\n  `email`,\n  `external_id`,\n  `last_login_at`,\n  `locale`,\n  `locale_id`,\n  `moderator`,\n  `name`,\n  `notes`,\n  `only_private_comments`,\n  `organization_id`,\n  `phone`,\n  `remote_photo_url`,\n  `restricted_agent`,\n  `role`,\n  `shared`,\n  `shared_agent`,\n  `signature`,\n  `suspended`,\n  `ticket_restriction`,\n  `time_zone`,\n  `two_factor_auth_enabled`,\n  `updated_at`,\n  `url`,\n  `verified`   \nfrom `dbt-package-testing`.`zendesk_source_integrations_tests`.`user_data` as user_table", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.124597Z", "completed_at": "2024-01-10T12:48:11.507187Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.508148Z", "completed_at": "2024-01-10T12:48:11.508159Z"}], "thread_id": "Thread-3", "execution_time": 0.3849761486053467, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    daylight_end_utc\n    \n as \n    \n    daylight_end_utc\n    \n, \n    \n    \n    daylight_offset\n    \n as \n    \n    daylight_offset\n    \n, \n    \n    \n    daylight_start_utc\n    \n as \n    \n    daylight_start_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    year\n    \n as \n    \n    year\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        daylight_end_utc,\n        daylight_offset,\n        daylight_start_utc,\n        time_zone,\n        year,\n        daylight_offset * 60 as daylight_offset_minutes\n        \n    from fields\n)\n\nselect * from final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.119113Z", "completed_at": "2024-01-10T12:48:11.522511Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.523229Z", "completed_at": "2024-01-10T12:48:11.523236Z"}], "thread_id": "Thread-2", "execution_time": 0.4053678512573242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    domain_name\n    \n as \n    \n    domain_name\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        domain_name,\n        index\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.387335Z", "completed_at": "2024-01-10T12:48:11.826092Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.827141Z", "completed_at": "2024-01-10T12:48:11.827158Z"}], "thread_id": "Thread-1", "execution_time": 0.44201016426086426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as group_id,\n        name\n    from fields\n    \n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.525613Z", "completed_at": "2024-01-10T12:48:11.895305Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.896133Z", "completed_at": "2024-01-10T12:48:11.896142Z"}], "thread_id": "Thread-2", "execution_time": 0.37211108207702637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp ) as _fivetran_synced,\n        cast(end_date as timestamp ) as holiday_end_date_at,\n        cast(id as string ) as holiday_id,\n        name as holiday_name,\n        cast(schedule_id as string ) as schedule_id,\n        cast(start_date as timestamp ) as holiday_start_date_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.511250Z", "completed_at": "2024-01-10T12:48:11.921884Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.922746Z", "completed_at": "2024-01-10T12:48:11.922753Z"}], "thread_id": "Thread-3", "execution_time": 0.41319799423217773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.309845Z", "completed_at": "2024-01-10T12:48:11.923848Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:11.925294Z", "completed_at": "2024-01-10T12:48:11.925300Z"}], "thread_id": "Thread-4", "execution_time": 0.6178202629089355, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    brand_url\n    \n as \n    \n    brand_url\n    \n, \n    \n    \n    has_help_center\n    \n as \n    \n    has_help_center\n    \n, \n    \n    \n    help_center_state\n    \n as \n    \n    help_center_state\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    logo_content_type\n    \n as \n    \n    logo_content_type\n    \n, \n    \n    \n    logo_content_url\n    \n as \n    \n    logo_content_url\n    \n, \n    \n    \n    logo_deleted\n    \n as \n    \n    logo_deleted\n    \n, \n    \n    \n    logo_file_name\n    \n as \n    \n    logo_file_name\n    \n, \n    \n    \n    logo_height\n    \n as \n    \n    logo_height\n    \n, \n    \n    \n    logo_id\n    \n as \n    \n    logo_id\n    \n, \n    \n    \n    logo_inline\n    \n as \n    \n    logo_inline\n    \n, \n    \n    \n    logo_mapped_content_url\n    \n as \n    \n    logo_mapped_content_url\n    \n, \n    \n    \n    logo_size\n    \n as \n    \n    logo_size\n    \n, \n    \n    \n    logo_url\n    \n as \n    \n    logo_url\n    \n, \n    \n    \n    logo_width\n    \n as \n    \n    logo_width\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subdomain\n    \n as \n    \n    subdomain\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as brand_id,\n        brand_url,\n        name,\n        subdomain,\n        active as is_active\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.830644Z", "completed_at": "2024-01-10T12:48:12.269401Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.270417Z", "completed_at": "2024-01-10T12:48:12.270435Z"}], "thread_id": "Thread-1", "execution_time": 0.442047119140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    shared_comments\n    \n as \n    \n    shared_comments\n    \n, \n    \n    \n    shared_tickets\n    \n as \n    \n    shared_tickets\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        created_at,\n        updated_at,\n        details,\n        name,\n        external_id\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.926524Z", "completed_at": "2024-01-10T12:48:12.342562Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.343477Z", "completed_at": "2024-01-10T12:48:12.343485Z"}], "thread_id": "Thread-3", "execution_time": 0.41971397399902344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    cast(null as INT64) as \n    \n    call_duration\n    \n , \n    cast(null as INT64) as \n    \n    call_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    facebook_comment\n    \n as \n    \n    facebook_comment\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as INT64) as \n    \n    location\n    \n , \n    \n    \n    public\n    \n as \n    \n    public\n    \n, \n    cast(null as INT64) as \n    \n    recording_url\n    \n , \n    cast(null as timestamp) as \n    \n    started_at\n    \n , \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    cast(null as INT64) as \n    \n    transcription_status\n    \n , \n    cast(null as INT64) as \n    \n    transcription_text\n    \n , \n    cast(null as INT64) as \n    \n    trusted\n    \n , \n    \n    \n    tweet\n    \n as \n    \n    tweet\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    voice_comment\n    \n as \n    \n    voice_comment\n    \n, \n    cast(null as INT64) as \n    \n    voice_comment_transcription_visible\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_comment_id,\n        _fivetran_synced,\n        body,\n        created as created_at,\n        \n        public as is_public,\n        ticket_id,\n        user_id,\n        facebook_comment as is_facebook_comment,\n        tweet as is_tweet,\n        voice_comment as is_voice_comment\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.905233Z", "completed_at": "2024-01-10T12:48:12.343151Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.345108Z", "completed_at": "2024-01-10T12:48:12.345112Z"}], "thread_id": "Thread-2", "execution_time": 0.4480130672454834, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    end_time_utc\n    \n as \n    \n    end_time_utc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    start_time_utc\n    \n as \n    \n    start_time_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as string) as schedule_id, --need to convert from numeric to string for downstream models to work properly\n        end_time,\n        start_time,\n        name as schedule_name,\n        created_at,\n        time_zone\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:11.931172Z", "completed_at": "2024-01-10T12:48:12.343759Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.345694Z", "completed_at": "2024-01-10T12:48:12.345697Z"}], "thread_id": "Thread-4", "execution_time": 0.41693592071533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_field_history_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    field_name\n    \n as \n    \n    field_name\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        field_name,\n        updated as valid_starting_at,\n            lead(updated) over (partition by ticket_id, field_name order by updated) as valid_ending_at,\n        \n        value,\n        user_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_field_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.273870Z", "completed_at": "2024-01-10T12:48:12.690863Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.691554Z", "completed_at": "2024-01-10T12:48:12.691562Z"}], "thread_id": "Thread-1", "execution_time": 0.4196040630340576, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    end_user_visible\n    \n as \n    \n    end_user_visible\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_form_id,\n        created_at,\n            updated_at,\n        \n        display_name,\n        active as is_active,\n        name\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n    \n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.353935Z", "completed_at": "2024-01-10T12:48:12.785594Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.786161Z", "completed_at": "2024-01-10T12:48:12.786169Z"}], "thread_id": "Thread-2", "execution_time": 0.4383842945098877, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allow_channelback\n    \n as \n    \n    allow_channelback\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_at\n    \n as \n    \n    due_at\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    forum_topic_id\n    \n as \n    \n    forum_topic_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    has_incidents\n    \n as \n    \n    has_incidents\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_public\n    \n as \n    \n    is_public\n    \n, \n    \n    \n    merged_ticket_ids\n    \n as \n    \n    merged_ticket_ids\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    problem_id\n    \n as \n    \n    problem_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    requester_id\n    \n as \n    \n    requester_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    submitter_id\n    \n as \n    \n    submitter_id\n    \n, \n    cast(null as INT64) as \n    \n    system_ccs\n    \n , \n    \n    \n    system_client\n    \n as \n    \n    system_client\n    \n, \n    cast(null as string) as \n    \n    system_ip_address\n    \n , \n    cast(null as INT64) as \n    \n    system_json_email_identifier\n    \n , \n    cast(null as FLOAT64) as \n    \n    system_latitude\n    \n , \n    cast(null as string) as \n    \n    system_location\n    \n , \n    cast(null as FLOAT64) as \n    \n    system_longitude\n    \n , \n    cast(null as INT64) as \n    \n    system_machine_generated\n    \n , \n    cast(null as INT64) as \n    \n    system_message_id\n    \n , \n    cast(null as INT64) as \n    \n    system_raw_email_identifier\n    \n , \n    \n    \n    ticket_form_id\n    \n as \n    \n    ticket_form_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    via_channel\n    \n as \n    \n    via_channel\n    \n, \n    \n    \n    via_source_from_address\n    \n as \n    \n    via_source_from_address\n    \n, \n    \n    \n    via_source_from_id\n    \n as \n    \n    via_source_from_id\n    \n, \n    \n    \n    via_source_from_title\n    \n as \n    \n    via_source_from_title\n    \n, \n    \n    \n    via_source_rel\n    \n as \n    \n    via_source_rel\n    \n, \n    \n    \n    via_source_to_address\n    \n as \n    \n    via_source_to_address\n    \n, \n    \n    \n    via_source_to_name\n    \n as \n    \n    via_source_to_name\n    \n\n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_id,\n        _fivetran_synced,\n        assignee_id,\n        brand_id,\n        created_at,\n            updated_at,\n        \n        description,\n        due_at,\n        group_id,\n        external_id,\n        is_public,\n        organization_id,\n        priority,\n        recipient,\n        requester_id,\n        status,\n        subject,\n        problem_id,\n        submitter_id,\n        ticket_form_id,\n        type,\n        url,\n        via_channel as created_channel,\n        via_source_from_id as source_from_id,\n        via_source_from_title as source_from_title,\n        via_source_rel as source_rel,\n        via_source_to_address as source_to_address,\n        via_source_to_name as source_to_name\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.348702Z", "completed_at": "2024-01-10T12:48:12.800350Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.800899Z", "completed_at": "2024-01-10T12:48:12.800906Z"}], "thread_id": "Thread-3", "execution_time": 0.4548048973083496, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_schedule_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        created_at,\n        \n        cast(schedule_id as string) as schedule_id --need to convert from numeric to string for downstream models to work properly\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_schedule`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.359418Z", "completed_at": "2024-01-10T12:48:12.813034Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.813758Z", "completed_at": "2024-01-10T12:48:12.813765Z"}], "thread_id": "Thread-4", "execution_time": 0.46199893951416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    standard_offset\n    \n as \n    \n    standard_offset\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        standard_offset,\n        time_zone,\n        -- the standard_offset is a string written as [+/-]HH:MM\n        -- let's convert it to an integer value of minutes\n        cast( \n\n  \n    split(\n        standard_offset,\n        ':'\n        )[safe_offset(0)]\n  \n\n as INT64 ) * 60 +\n            (cast( \n\n  \n    split(\n        standard_offset,\n        ':'\n        )[safe_offset(1)]\n  \n\n as INT64 ) *\n                (case when standard_offset like '-%' then -1 else 1 end) ) as standard_offset_minutes\n    \n    from fields\n)\n\nselect * from final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.815711Z", "completed_at": "2024-01-10T12:48:12.825182Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.825769Z", "completed_at": "2024-01-10T12:48:12.825774Z"}], "thread_id": "Thread-4", "execution_time": 0.011272907257080078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.dbt_utils_unique_combination_of_columns_stg_zendesk__daylight_time_time_zone__year.88227aef3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        time_zone, year\n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__daylight_time`\n    group by time_zone, year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.827746Z", "completed_at": "2024-01-10T12:48:12.835096Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.835689Z", "completed_at": "2024-01-10T12:48:12.835695Z"}], "thread_id": "Thread-4", "execution_time": 0.009196996688842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__domain_name_organization_id.a2b5ff8fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__domain_name`\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.837560Z", "completed_at": "2024-01-10T12:48:12.841106Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.841635Z", "completed_at": "2024-01-10T12:48:12.841640Z"}], "thread_id": "Thread-4", "execution_time": 0.005218982696533203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__group_group_id.7659ed83ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect group_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group`\nwhere group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.843296Z", "completed_at": "2024-01-10T12:48:12.847820Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.848334Z", "completed_at": "2024-01-10T12:48:12.848338Z"}], "thread_id": "Thread-4", "execution_time": 0.006124973297119141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__group_group_id.f0658dabcd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select group_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__group`\n  where group_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.849990Z", "completed_at": "2024-01-10T12:48:12.853065Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.853563Z", "completed_at": "2024-01-10T12:48:12.853567Z"}], "thread_id": "Thread-4", "execution_time": 0.004620075225830078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__schedule_holiday_holiday_id.52eb08f782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday`\nwhere holiday_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.855347Z", "completed_at": "2024-01-10T12:48:12.858365Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.858855Z", "completed_at": "2024-01-10T12:48:12.858859Z"}], "thread_id": "Thread-4", "execution_time": 0.0046918392181396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__schedule_holiday_holiday_id.0341d5635a", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select holiday_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__schedule_holiday`\n  where holiday_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.860535Z", "completed_at": "2024-01-10T12:48:12.864035Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.864530Z", "completed_at": "2024-01-10T12:48:12.864534Z"}], "thread_id": "Thread-4", "execution_time": 0.005029916763305664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__brand_brand_id.a2419e1741", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect brand_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand`\nwhere brand_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.866112Z", "completed_at": "2024-01-10T12:48:12.869189Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.869670Z", "completed_at": "2024-01-10T12:48:12.869674Z"}], "thread_id": "Thread-4", "execution_time": 0.0045549869537353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__brand_brand_id.fdf8e23c9e", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select brand_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__brand`\n  where brand_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.871258Z", "completed_at": "2024-01-10T12:48:12.874264Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.874755Z", "completed_at": "2024-01-10T12:48:12.874759Z"}], "thread_id": "Thread-4", "execution_time": 0.004500150680541992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__organization_organization_id.de7b98c06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization`\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.876331Z", "completed_at": "2024-01-10T12:48:12.879289Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.879780Z", "completed_at": "2024-01-10T12:48:12.879784Z"}], "thread_id": "Thread-4", "execution_time": 0.004450798034667969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__organization_organization_id.152be1ab31", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select organization_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__organization`\n  where organization_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.881362Z", "completed_at": "2024-01-10T12:48:12.884405Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.884896Z", "completed_at": "2024-01-10T12:48:12.884900Z"}], "thread_id": "Thread-4", "execution_time": 0.004531145095825195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_comment_ticket_comment_id.b821f4a606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_comment_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment`\nwhere ticket_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.886504Z", "completed_at": "2024-01-10T12:48:12.890098Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.890596Z", "completed_at": "2024-01-10T12:48:12.890600Z"}], "thread_id": "Thread-4", "execution_time": 0.005129814147949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_comment_ticket_comment_id.ba353330cd", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_comment_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_comment`\n  where ticket_comment_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.892184Z", "completed_at": "2024-01-10T12:48:12.895132Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.895616Z", "completed_at": "2024-01-10T12:48:12.895620Z"}], "thread_id": "Thread-4", "execution_time": 0.004423856735229492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_form_history_ticket_form_id.1afe781a17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_form_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_form_history`\nwhere ticket_form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.897176Z", "completed_at": "2024-01-10T12:48:12.900324Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.900802Z", "completed_at": "2024-01-10T12:48:12.900807Z"}], "thread_id": "Thread-4", "execution_time": 0.004611968994140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_ticket_id.a8229e6981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket`\nwhere ticket_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.902348Z", "completed_at": "2024-01-10T12:48:12.905244Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.905724Z", "completed_at": "2024-01-10T12:48:12.905727Z"}], "thread_id": "Thread-4", "execution_time": 0.0043621063232421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_ticket_id.4be7124521", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select ticket_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket`\n  where ticket_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.907278Z", "completed_at": "2024-01-10T12:48:12.910292Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.910779Z", "completed_at": "2024-01-10T12:48:12.910783Z"}], "thread_id": "Thread-4", "execution_time": 0.004515171051025391, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__time_zone_time_zone.b25b3452b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_zone\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone`\nwhere time_zone is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.912347Z", "completed_at": "2024-01-10T12:48:12.915995Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:12.916505Z", "completed_at": "2024-01-10T12:48:12.916509Z"}], "thread_id": "Thread-4", "execution_time": 0.005163908004760742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__time_zone_time_zone.67995adbaf", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select time_zone as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__time_zone`\n  where time_zone is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.693800Z", "completed_at": "2024-01-10T12:48:13.078544Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:13.079496Z", "completed_at": "2024-01-10T12:48:13.079507Z"}], "thread_id": "Thread-1", "execution_time": 0.38750314712524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        \n        tag as tags\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__ticket_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.788080Z", "completed_at": "2024-01-10T12:48:13.155662Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:13.156601Z", "completed_at": "2024-01-10T12:48:13.156610Z"}], "thread_id": "Thread-2", "execution_time": 0.3699650764465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tag_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    tag\n    \n as \n    \n    tag\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        user_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tag`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:12.802999Z", "completed_at": "2024-01-10T12:48:13.244049Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:13.244672Z", "completed_at": "2024-01-10T12:48:13.244678Z"}], "thread_id": "Thread-3", "execution_time": 0.4428892135620117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user_tmp`\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    authenticity_token\n    \n as \n    \n    authenticity_token\n    \n, \n    \n    \n    chat_only\n    \n as \n    \n    chat_only\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_login_at\n    \n as \n    \n    last_login_at\n    \n, \n    \n    \n    locale\n    \n as \n    \n    locale\n    \n, \n    \n    \n    locale_id\n    \n as \n    \n    locale_id\n    \n, \n    \n    \n    moderator\n    \n as \n    \n    moderator\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    only_private_comments\n    \n as \n    \n    only_private_comments\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    remote_photo_url\n    \n as \n    \n    remote_photo_url\n    \n, \n    \n    \n    restricted_agent\n    \n as \n    \n    restricted_agent\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    shared\n    \n as \n    \n    shared\n    \n, \n    \n    \n    shared_agent\n    \n as \n    \n    shared_agent\n    \n, \n    \n    \n    signature\n    \n as \n    \n    signature\n    \n, \n    \n    \n    suspended\n    \n as \n    \n    suspended\n    \n, \n    \n    \n    ticket_restriction\n    \n as \n    \n    ticket_restriction\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    two_factor_auth_enabled\n    \n as \n    \n    two_factor_auth_enabled\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n        \n    from base\n),\n\nfinal as ( \n    \n    select \n        id as user_id,\n        external_id,\n        _fivetran_synced,\n        last_login_at,\n            created_at,\n            updated_at,\n        email,\n        name,\n        organization_id,\n        role,\n        ticket_restriction,\n        time_zone,\n        locale,\n        active as is_active,\n        suspended as is_suspended\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:13.247987Z", "completed_at": "2024-01-10T12:48:13.254730Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:13.255786Z", "completed_at": "2024-01-10T12:48:13.255791Z"}], "thread_id": "Thread-4", "execution_time": 0.010061979293823242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__user_user_id.102d572926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user`\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-01-10T12:48:13.251527Z", "completed_at": "2024-01-10T12:48:13.255023Z"}, {"name": "execute", "started_at": "2024-01-10T12:48:13.256065Z", "completed_at": "2024-01-10T12:48:13.256068Z"}], "thread_id": "Thread-1", "execution_time": 0.010118961334228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__user_user_id.3d3e346b11", "compiled": true, "compiled_code": "\n    \n    \n\nwith dbt_test__target as (\n\n  select user_id as unique_field\n  from `dbt-package-testing`.`zendesk_source_integrations_tests_zendesk_source`.`stg_zendesk__user`\n  where user_id is not null\n\n)\n\nselect\n    unique_field,\n    count(*) as n_records\n\nfrom dbt_test__target\ngroup by unique_field\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 4.762834310531616, "args": {"favor_state": false, "introspect": true, "print": true, "printer_width": 80, "enable_legacy_logger": false, "partial_parse": true, "log_format_file": "debug", "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Zendesk/dbt_zendesk_source/integration_tests", "vars": {}, "empty_catalog": false, "macro_debugging": false, "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Zendesk/dbt_zendesk_source/integration_tests/logs", "select": [], "version_check": true, "partial_parse_file_diff": true, "static_parser": true, "invocation_command": "dbt docs generate", "exclude": [], "log_level_file": "debug", "profiles_dir": "/Users/jamie.rodriguez/.dbt", "use_colors": true, "send_anonymous_usage_stats": true, "populate_cache": true, "strict_mode": false, "use_colors_file": true, "cache_selected_only": false, "write_json": true, "warn_error_options": {"include": [], "exclude": []}, "show_resource_report": false, "compile": true, "which": "generate", "log_level": "info", "quiet": false, "static": false, "log_file_max_bytes": 10485760, "defer": false, "indirect_selection": "eager", "log_format": "default"}}