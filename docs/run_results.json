{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.0", "generated_at": "2023-11-07T08:42:04.942177Z", "invocation_id": "82adec9f-001f-4e4c-b7b9-52973e0911b3", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:57.582343Z", "completed_at": "2023-11-07T08:41:58.286981Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:58.289964Z", "completed_at": "2023-11-07T08:41:58.289976Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.900907039642334, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"TIME_ZONE\",\n  \"YEAR\",\n  \"_FIVETRAN_SYNCED\",\n  \"DAYLIGHT_END_UTC\",\n  \"DAYLIGHT_OFFSET\",\n  \"DAYLIGHT_START_UTC\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.daylight_time_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__daylight_time_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:57.557199Z", "completed_at": "2023-11-07T08:41:58.286695Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:58.289511Z", "completed_at": "2023-11-07T08:41:58.289515Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9040999412536621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand_tmp", "compiled": true, "compiled_code": "select \"ID\",\n  \"_FIVETRAN_DELETED\",\n  \"_FIVETRAN_SYNCED\",\n  \"ACTIVE\",\n  \"BRAND_URL\",\n  \"DEFAULT\",\n  \"HAS_HELP_CENTER\",\n  \"HELP_CENTER_STATE\",\n  \"LOGO_CONTENT_TYPE\",\n  \"LOGO_CONTENT_URL\",\n  \"LOGO_DELETED\",\n  \"LOGO_FILE_NAME\",\n  \"LOGO_HEIGHT\",\n  \"LOGO_ID\",\n  \"LOGO_INLINE\",\n  \"LOGO_MAPPED_CONTENT_URL\",\n  \"LOGO_SIZE\",\n  \"LOGO_URL\",\n  \"LOGO_WIDTH\",\n  \"NAME\",\n  \"SUBDOMAIN\",\n  \"URL\"  \nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.brand_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__brand_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:57.589636Z", "completed_at": "2023-11-07T08:41:58.283757Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:58.286371Z", "completed_at": "2023-11-07T08:41:58.286396Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.9124078750610352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nselect \"INDEX\",\n  \"ORGANIZATION_ID\",\n  \"_FIVETRAN_SYNCED\",\n  \"DOMAIN_NAME\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.domain_name_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__domain_name_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:57.594798Z", "completed_at": "2023-11-07T08:41:58.285962Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:58.288475Z", "completed_at": "2023-11-07T08:41:58.288479Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.9125380516052246, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group_tmp", "compiled": true, "compiled_code": "select \"ID\",\n  \"_FIVETRAN_DELETED\",\n  \"_FIVETRAN_SYNCED\",\n  \"CREATED_AT\",\n  \"NAME\",\n  \"UPDATED_AT\",\n  \"URL\"  \nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.group_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__group_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:58.459131Z", "completed_at": "2023-11-07T08:41:58.919508Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:58.920274Z", "completed_at": "2023-11-07T08:41:58.920282Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.6047379970550537, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nselect \"ORGANIZATION_ID\",\n  \"TAG\",\n  \"_FIVETRAN_SYNCED\"  \nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.organization_tag_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization_tag_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:58.484451Z", "completed_at": "2023-11-07T08:41:59.012633Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.014584Z", "completed_at": "2023-11-07T08:41:59.014591Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6811931133270264, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"END_TIME\",\n  \"ID\",\n  \"START_TIME\",\n  \"_FIVETRAN_DELETED\",\n  \"_FIVETRAN_SYNCED\",\n  \"END_TIME_UTC\",\n  \"NAME\",\n  \"START_TIME_UTC\",\n  \"TIME_ZONE\",\n  \"CREATED_AT\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.schedule_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:58.468570Z", "completed_at": "2023-11-07T08:41:59.013372Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.015256Z", "completed_at": "2023-11-07T08:41:59.015259Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7030236721038818, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tmp", "compiled": true, "compiled_code": "select \"ID\",\n  \"_FIVETRAN_SYNCED\",\n  \"CREATED_AT\",\n  \"DETAILS\",\n  \"EXTERNAL_ID\",\n  \"GROUP_ID\",\n  \"NAME\",\n  \"NOTES\",\n  \"SHARED_COMMENTS\",\n  \"SHARED_TICKETS\",\n  \"UPDATED_AT\",\n  \"URL\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.organization_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:58.479002Z", "completed_at": "2023-11-07T08:41:59.013019Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.014931Z", "completed_at": "2023-11-07T08:41:59.014935Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6937980651855469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"ID\",\n  \"SCHEDULE_ID\",\n  \"_FIVETRAN_DELETED\",\n  \"_FIVETRAN_SYNCED\",\n  \"END_DATE\",\n  \"NAME\",\n  \"START_DATE\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.schedule_holiday_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_holiday_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.063650Z", "completed_at": "2023-11-07T08:41:59.619143Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.619982Z", "completed_at": "2023-11-07T08:41:59.619991Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7259812355041504, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment_tmp", "compiled": true, "compiled_code": "select \"ID\",\n  \"_FIVETRAN_SYNCED\",\n  \"BODY\",\n  \"CREATED\",\n  \"FACEBOOK_COMMENT\",\n  \"PUBLIC\",\n  \"TICKET_ID\",\n  \"TWEET\",\n  \"USER_ID\",\n  \"VOICE_COMMENT\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.ticket_comment_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_comment_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.160055Z", "completed_at": "2023-11-07T08:41:59.710357Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.711068Z", "completed_at": "2023-11-07T08:41:59.711074Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6836040019989014, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history_tmp", "compiled": true, "compiled_code": "select \"FIELD_NAME\",\n  \"TICKET_ID\",\n  \"UPDATED\",\n  \"_FIVETRAN_SYNCED\",\n  \"USER_ID\",\n  \"VALUE\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.ticket_field_history_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_field_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.172397Z", "completed_at": "2023-11-07T08:41:59.715897Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.716539Z", "completed_at": "2023-11-07T08:41:59.716544Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7011330127716064, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nselect \"ID\",\n  \"UPDATED_AT\",\n  \"_FIVETRAN_DELETED\",\n  \"_FIVETRAN_SYNCED\",\n  \"ACTIVE\",\n  \"CREATED_AT\",\n  \"DISPLAY_NAME\",\n  \"END_USER_VISIBLE\",\n  \"NAME\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.ticket_form_history_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_form_history_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.178237Z", "completed_at": "2023-11-07T08:41:59.747827Z"}, {"name": "execute", "started_at": "2023-11-07T08:41:59.748380Z", "completed_at": "2023-11-07T08:41:59.748385Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7166810035705566, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\n\n\nselect \"CREATED_AT\",\n  \"TICKET_ID\",\n  \"_FIVETRAN_SYNCED\",\n  \"SCHEDULE_ID\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.ticket_schedule_data\n\n", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_schedule_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.844895Z", "completed_at": "2023-11-07T08:42:00.388303Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.389584Z", "completed_at": "2023-11-07T08:42:00.389593Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6977837085723877, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tmp", "compiled": true, "compiled_code": "select \"ID\",\n  \"_FIVETRAN_SYNCED\",\n  \"ALLOW_CHANNELBACK\",\n  \"ASSIGNEE_ID\",\n  \"BRAND_ID\",\n  \"CREATED_AT\",\n  \"DESCRIPTION\",\n  \"DUE_AT\",\n  \"EXTERNAL_ID\",\n  \"FORUM_TOPIC_ID\",\n  \"GROUP_ID\",\n  \"HAS_INCIDENTS\",\n  \"IS_PUBLIC\",\n  \"ORGANIZATION_ID\",\n  \"PRIORITY\",\n  \"PROBLEM_ID\",\n  \"RECIPIENT\",\n  \"REQUESTER_ID\",\n  \"STATUS\",\n  \"SUBJECT\",\n  \"SUBMITTER_ID\",\n  \"SYSTEM_CLIENT\",\n  \"TICKET_FORM_ID\",\n  \"TYPE\",\n  \"UPDATED_AT\",\n  \"URL\",\n  \"VIA_CHANNEL\",\n  \"VIA_SOURCE_FROM_ID\",\n  \"VIA_SOURCE_FROM_TITLE\",\n  \"VIA_SOURCE_REL\",\n  \"VIA_SOURCE_TO_ADDRESS\",\n  \"VIA_SOURCE_TO_NAME\",\n  \"MERGED_TICKET_IDS\",\n  \"VIA_SOURCE_FROM_ADDRESS\",\n  \"FOLLOWUP_IDS\",\n  \"VIA_FOLLOWUP_SOURCE_ID\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.ticket_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.792466Z", "completed_at": "2023-11-07T08:42:00.388981Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.390809Z", "completed_at": "2023-11-07T08:42:00.390813Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7606348991394043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag_tmp", "compiled": true, "compiled_code": "select \"TAG\",\n  \"TICKET_ID\",\n  \"_FIVETRAN_SYNCED\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.ticket_tag_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_tag_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.890315Z", "completed_at": "2023-11-07T08:42:00.409188Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.409839Z", "completed_at": "2023-11-07T08:42:00.409845Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.667637825012207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nselect \"TAG\",\n  \"USER_ID\",\n  \"_FIVETRAN_SYNCED\"  \nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.user_tag_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user_tag_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:41:59.873581Z", "completed_at": "2023-11-07T08:42:00.380616Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.385624Z", "completed_at": "2023-11-07T08:42:00.385637Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.6849532127380371, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone_tmp", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nselect \"TIME_ZONE\",\n  \"_FIVETRAN_SYNCED\",\n  \"STANDARD_OFFSET\"\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.time_zone_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__time_zone_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.554579Z", "completed_at": "2023-11-07T08:42:00.556501Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.559350Z", "completed_at": "2023-11-07T08:42:00.559358Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007915019989013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.brand_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.562075Z", "completed_at": "2023-11-07T08:42:00.563403Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.566661Z", "completed_at": "2023-11-07T08:42:00.566665Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009445905685424805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.daylight_time_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.563758Z", "completed_at": "2023-11-07T08:42:00.564982Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.566987Z", "completed_at": "2023-11-07T08:42:00.566994Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009561777114868164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.domain_name_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.567379Z", "completed_at": "2023-11-07T08:42:00.568579Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.571079Z", "completed_at": "2023-11-07T08:42:00.571086Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007170915603637695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.group_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.573680Z", "completed_at": "2023-11-07T08:42:00.574982Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.578020Z", "completed_at": "2023-11-07T08:42:00.578028Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010214090347290039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.575268Z", "completed_at": "2023-11-07T08:42:00.576461Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.578420Z", "completed_at": "2023-11-07T08:42:00.578426Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010318994522094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.organization_tag_data_snowflake", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.578735Z", "completed_at": "2023-11-07T08:42:00.580988Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.583465Z", "completed_at": "2023-11-07T08:42:00.583471Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007997989654541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.585975Z", "completed_at": "2023-11-07T08:42:00.587290Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.590494Z", "completed_at": "2023-11-07T08:42:00.590498Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009202003479003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.schedule_holiday_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.587599Z", "completed_at": "2023-11-07T08:42:00.588788Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.590814Z", "completed_at": "2023-11-07T08:42:00.590817Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009325027465820312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_comment_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.591112Z", "completed_at": "2023-11-07T08:42:00.592415Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.594811Z", "completed_at": "2023-11-07T08:42:00.594814Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007112026214599609, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.597423Z", "completed_at": "2023-11-07T08:42:00.598748Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.602564Z", "completed_at": "2023-11-07T08:42:00.602568Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010234832763671875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_field_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.599089Z", "completed_at": "2023-11-07T08:42:00.601123Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.602937Z", "completed_at": "2023-11-07T08:42:00.602941Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010395050048828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_form_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.603228Z", "completed_at": "2023-11-07T08:42:00.604465Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.607517Z", "completed_at": "2023-11-07T08:42:00.607523Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007976293563842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_schedule_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.610606Z", "completed_at": "2023-11-07T08:42:00.611725Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.614860Z", "completed_at": "2023-11-07T08:42:00.614868Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009311199188232422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.ticket_tag_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.612023Z", "completed_at": "2023-11-07T08:42:00.613188Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.615175Z", "completed_at": "2023-11-07T08:42:00.615178Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009307861328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.time_zone_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.615527Z", "completed_at": "2023-11-07T08:42:00.616698Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.619223Z", "completed_at": "2023-11-07T08:42:00.619226Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006939888000488281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_data_snowflake", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.621728Z", "completed_at": "2023-11-07T08:42:00.623074Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:00.630719Z", "completed_at": "2023-11-07T08:42:00.630724Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0166018009185791, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.zendesk_source_integration_tests.user_tag_data_snowflake", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.543822Z", "completed_at": "2023-11-07T08:42:01.065772Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:01.066358Z", "completed_at": "2023-11-07T08:42:01.066365Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.8536841869354248, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tmp", "compiled": true, "compiled_code": "select \"ID\",\n  \"_FIVETRAN_SYNCED\",\n  \"ACTIVE\",\n  \"ALIAS\",\n  \"AUTHENTICITY_TOKEN\",\n  \"CHAT_ONLY\",\n  \"CREATED_AT\",\n  \"DETAILS\",\n  \"EMAIL\",\n  \"EXTERNAL_ID\",\n  \"LAST_LOGIN_AT\",\n  \"LOCALE\",\n  \"LOCALE_ID\",\n  \"MODERATOR\",\n  \"NAME\",\n  \"NOTES\",\n  \"ONLY_PRIVATE_COMMENTS\",\n  \"ORGANIZATION_ID\",\n  \"PHONE\",\n  \"REMOTE_PHOTO_URL\",\n  \"RESTRICTED_AGENT\",\n  \"ROLE\",\n  \"SHARED\",\n  \"SHARED_AGENT\",\n  \"SIGNATURE\",\n  \"SUSPENDED\",\n  \"TICKET_RESTRICTION\",\n  \"TIME_ZONE\",\n  \"TWO_FACTOR_AUTH_ENABLED\",\n  \"UPDATED_AT\",\n  \"URL\",\n  \"VERIFIED\"   \nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4.user_data", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user_tmp"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.623373Z", "completed_at": "2023-11-07T08:42:01.244740Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:01.245978Z", "completed_at": "2023-11-07T08:42:01.245982Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.9646031856536865, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__daylight_time", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__daylight_time_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    daylight_end_utc\n    \n as \n    \n    daylight_end_utc\n    \n, \n    \n    \n    daylight_offset\n    \n as \n    \n    daylight_offset\n    \n, \n    \n    \n    daylight_start_utc\n    \n as \n    \n    daylight_start_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    year\n    \n as \n    \n    year\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        daylight_end_utc,\n        daylight_offset,\n        daylight_start_utc,\n        time_zone,\n        year,\n        daylight_offset * 60 as daylight_offset_minutes\n        \n    from fields\n)\n\nselect * from final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__daylight_time"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.640265Z", "completed_at": "2023-11-07T08:42:01.244353Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:01.245667Z", "completed_at": "2023-11-07T08:42:01.245682Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.9467713832855225, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__domain_name", "compiled": true, "compiled_code": "--To disable this model, set the using_domain_names variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__domain_name_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    domain_name\n    \n as \n    \n    domain_name\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        domain_name,\n        index\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__domain_name"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:00.631305Z", "completed_at": "2023-11-07T08:42:01.594135Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:01.605934Z", "completed_at": "2023-11-07T08:42:01.605948Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 1.5315289497375488, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__brand", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__brand_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    brand_url\n    \n as \n    \n    brand_url\n    \n, \n    \n    \n    has_help_center\n    \n as \n    \n    has_help_center\n    \n, \n    \n    \n    help_center_state\n    \n as \n    \n    help_center_state\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    logo_content_type\n    \n as \n    \n    logo_content_type\n    \n, \n    \n    \n    logo_content_url\n    \n as \n    \n    logo_content_url\n    \n, \n    \n    \n    logo_deleted\n    \n as \n    \n    logo_deleted\n    \n, \n    \n    \n    logo_file_name\n    \n as \n    \n    logo_file_name\n    \n, \n    \n    \n    logo_height\n    \n as \n    \n    logo_height\n    \n, \n    \n    \n    logo_id\n    \n as \n    \n    logo_id\n    \n, \n    \n    \n    logo_inline\n    \n as \n    \n    logo_inline\n    \n, \n    \n    \n    logo_mapped_content_url\n    \n as \n    \n    logo_mapped_content_url\n    \n, \n    \n    \n    logo_size\n    \n as \n    \n    logo_size\n    \n, \n    \n    \n    logo_url\n    \n as \n    \n    logo_url\n    \n, \n    \n    \n    logo_width\n    \n as \n    \n    logo_width\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    subdomain\n    \n as \n    \n    subdomain\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as brand_id,\n        brand_url,\n        name,\n        subdomain,\n        active as is_active\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__brand"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:01.399571Z", "completed_at": "2023-11-07T08:42:02.288468Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:02.289172Z", "completed_at": "2023-11-07T08:42:02.289180Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 1.053764820098877, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__group", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__group_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as group_id,\n        name\n    from fields\n    \n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__group"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:01.595279Z", "completed_at": "2023-11-07T08:42:02.559283Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:02.559894Z", "completed_at": "2023-11-07T08:42:02.559905Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.1005969047546387, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_organization_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization_tag_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n        \n            \n            \"TAG\"\n            \n        \n    \n as \n    \n        \n            \n            \"TAG\"\n            \n        \n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        organization_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization_tag"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:01.600416Z", "completed_at": "2023-11-07T08:42:02.688480Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:02.689151Z", "completed_at": "2023-11-07T08:42:02.689159Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 1.2316951751708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    end_time\n    \n as \n    \n    end_time\n    \n, \n    \n    \n    end_time_utc\n    \n as \n    \n    end_time_utc\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    start_time\n    \n as \n    \n    start_time\n    \n, \n    \n    \n    start_time_utc\n    \n as \n    \n    start_time_utc\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        cast(id as TEXT) as schedule_id, --need to convert from numeric to string for downstream models to work properly\n        end_time,\n        start_time,\n        name as schedule_name,\n        created_at,\n        time_zone\n        \n    from fields\n    where not coalesce(_fivetran_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:02.165085Z", "completed_at": "2023-11-07T08:42:02.719793Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:02.720471Z", "completed_at": "2023-11-07T08:42:02.720478Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.707381010055542, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__organization", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    shared_comments\n    \n as \n    \n    shared_comments\n    \n, \n    \n    \n    shared_tickets\n    \n as \n    \n    shared_tickets\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as organization_id,\n        created_at,\n        updated_at,\n        details,\n        name,\n        external_id\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:02.454564Z", "completed_at": "2023-11-07T08:42:02.981388Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:02.982036Z", "completed_at": "2023-11-07T08:42:02.982049Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6769201755523682, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__schedule_holiday", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_holiday_tmp\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    end_date\n    \n as \n    \n    end_date\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        _fivetran_deleted,\n        cast(_fivetran_synced as timestamp ) as _fivetran_synced,\n        cast(end_date as timestamp ) as holiday_end_date_at,\n        cast(id as TEXT ) as holiday_id,\n        name as holiday_name,\n        cast(schedule_id as TEXT ) as schedule_id,\n        cast(start_date as timestamp ) as holiday_start_date_at\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_holiday"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:02.695482Z", "completed_at": "2023-11-07T08:42:03.223773Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:03.224478Z", "completed_at": "2023-11-07T08:42:03.224486Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.685028076171875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_comment", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_comment_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    body\n    \n as \n    \n    body\n    \n, \n    cast(null as integer) as \n    \n    call_duration\n    \n , \n    cast(null as integer) as \n    \n    call_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    facebook_comment\n    \n as \n    \n    facebook_comment\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as integer) as \n    \n    location\n    \n , \n    \n    \n    public\n    \n as \n    \n    public\n    \n, \n    cast(null as integer) as \n    \n    recording_url\n    \n , \n    cast(null as timestamp) as \n    \n    started_at\n    \n , \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    cast(null as integer) as \n    \n    transcription_status\n    \n , \n    cast(null as integer) as \n    \n    transcription_text\n    \n , \n    cast(null as integer) as \n    \n    trusted\n    \n , \n    \n    \n    tweet\n    \n as \n    \n    tweet\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    voice_comment\n    \n as \n    \n    voice_comment\n    \n, \n    cast(null as integer) as \n    \n    voice_comment_transcription_visible\n    \n \n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_comment_id,\n        _fivetran_synced,\n        body,\n        created as created_at,\n        \n        public as is_public,\n        ticket_id,\n        user_id,\n        facebook_comment as is_facebook_comment,\n        tweet as is_tweet,\n        voice_comment as is_voice_comment\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_comment"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:02.827194Z", "completed_at": "2023-11-07T08:42:03.379110Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:03.380850Z", "completed_at": "2023-11-07T08:42:03.380858Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.6997380256652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_field_history", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_field_history_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    field_name\n    \n as \n    \n    field_name\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        field_name,\n        updated as valid_starting_at,\n            lead(updated) over (partition by ticket_id, field_name order by updated) as valid_ending_at,\n        \n        value,\n        user_id\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_field_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:02.873198Z", "completed_at": "2023-11-07T08:42:03.417041Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:03.417745Z", "completed_at": "2023-11-07T08:42:03.417755Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.6853909492492676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_form_history", "compiled": true, "compiled_code": "--To disable this model, set the using_ticket_form_history variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_form_history_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_deleted\n    \n as \n    \n    _fivetran_deleted\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    display_name\n    \n as \n    \n    display_name\n    \n, \n    \n    \n    end_user_visible\n    \n as \n    \n    end_user_visible\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_form_id,\n        created_at,\n            updated_at,\n        \n        display_name,\n        active as is_active,\n        name\n    from fields\n    where not coalesce(_fivetran_deleted, false)\n    \n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_form_history"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:03.132611Z", "completed_at": "2023-11-07T08:42:03.902877Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:03.903636Z", "completed_at": "2023-11-07T08:42:03.903654Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.91867995262146, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_schedule", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_schedule_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    schedule_id\n    \n as \n    \n    schedule_id\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        created_at,\n        \n        cast(schedule_id as TEXT) as schedule_id --need to convert from numeric to string for downstream models to work properly\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_schedule"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:03.382881Z", "completed_at": "2023-11-07T08:42:03.944144Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:03.944722Z", "completed_at": "2023-11-07T08:42:03.944729Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.7049252986907959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    allow_channelback\n    \n as \n    \n    allow_channelback\n    \n, \n    \n    \n    assignee_id\n    \n as \n    \n    assignee_id\n    \n, \n    \n    \n    brand_id\n    \n as \n    \n    brand_id\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_at\n    \n as \n    \n    due_at\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    forum_topic_id\n    \n as \n    \n    forum_topic_id\n    \n, \n    \n    \n    group_id\n    \n as \n    \n    group_id\n    \n, \n    \n    \n    has_incidents\n    \n as \n    \n    has_incidents\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_public\n    \n as \n    \n    is_public\n    \n, \n    \n    \n    merged_ticket_ids\n    \n as \n    \n    merged_ticket_ids\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    priority\n    \n as \n    \n    priority\n    \n, \n    \n    \n    problem_id\n    \n as \n    \n    problem_id\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    requester_id\n    \n as \n    \n    requester_id\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    subject\n    \n as \n    \n    subject\n    \n, \n    \n    \n    submitter_id\n    \n as \n    \n    submitter_id\n    \n, \n    cast(null as integer) as \n    \n    system_ccs\n    \n , \n    \n    \n    system_client\n    \n as \n    \n    system_client\n    \n, \n    cast(null as TEXT) as \n    \n    system_ip_address\n    \n , \n    cast(null as integer) as \n    \n    system_json_email_identifier\n    \n , \n    cast(null as float) as \n    \n    system_latitude\n    \n , \n    cast(null as TEXT) as \n    \n    system_location\n    \n , \n    cast(null as float) as \n    \n    system_longitude\n    \n , \n    cast(null as integer) as \n    \n    system_machine_generated\n    \n , \n    cast(null as integer) as \n    \n    system_message_id\n    \n , \n    cast(null as integer) as \n    \n    system_raw_email_identifier\n    \n , \n    \n    \n    ticket_form_id\n    \n as \n    \n    ticket_form_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    via_channel\n    \n as \n    \n    via_channel\n    \n, \n    \n    \n    via_source_from_address\n    \n as \n    \n    via_source_from_address\n    \n, \n    \n    \n    via_source_from_id\n    \n as \n    \n    via_source_from_id\n    \n, \n    \n    \n    via_source_from_title\n    \n as \n    \n    via_source_from_title\n    \n, \n    \n    \n    via_source_rel\n    \n as \n    \n    via_source_rel\n    \n, \n    \n    \n    via_source_to_address\n    \n as \n    \n    via_source_to_address\n    \n, \n    \n    \n    via_source_to_name\n    \n as \n    \n    via_source_to_name\n    \n\n\n\n\n        --The below script allows for pass through columns.\n        \n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as ticket_id,\n        _fivetran_synced,\n        assignee_id,\n        brand_id,\n        created_at,\n            updated_at,\n        \n        description,\n        due_at,\n        group_id,\n        external_id,\n        is_public,\n        organization_id,\n        priority,\n        recipient,\n        requester_id,\n        status,\n        subject,\n        problem_id,\n        submitter_id,\n        ticket_form_id,\n        type,\n        url,\n        via_channel as created_channel,\n        via_source_from_id as source_from_id,\n        via_source_from_title as source_from_title,\n        via_source_rel as source_rel,\n        via_source_to_address as source_to_address,\n        via_source_to_name as source_to_name\n\n        --The below script allows for pass through columns.\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:03.529751Z", "completed_at": "2023-11-07T08:42:04.100474Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.107411Z", "completed_at": "2023-11-07T08:42:04.107421Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.7220761775970459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__ticket_tag", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_tag_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    ticket_id\n    \n as \n    \n    ticket_id\n    \n, \n    \n    \n        \n            \n            \"TAG\"\n            \n        \n    \n as \n    \n        \n            \n            \"TAG\"\n            \n        \n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        ticket_id,\n        \n        tag as tags\n        \n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_tag"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:03.559553Z", "completed_at": "2023-11-07T08:42:04.106261Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.108746Z", "completed_at": "2023-11-07T08:42:04.108753Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.7064740657806396, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user_tag", "compiled": true, "compiled_code": "--To disable this model, set the using_user_tags variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user_tag_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    user_id\n    \n as \n    \n    user_id\n    \n, \n    \n    \n        \n            \n            \"TAG\"\n            \n        \n    \n as \n    \n        \n            \n            \"TAG\"\n            \n        \n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        user_id,\n        \n        tag\n        \n        as tags\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user_tag"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.253009Z", "completed_at": "2023-11-07T08:42:04.266214Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.267703Z", "completed_at": "2023-11-07T08:42:04.267712Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.022505998611450195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.dbt_utils_unique_combination_of_columns_stg_zendesk__daylight_time_time_zone__year.88227aef3d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        time_zone, year\n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__daylight_time\n    group by time_zone, year\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.268027Z", "completed_at": "2023-11-07T08:42:04.276520Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.280427Z", "completed_at": "2023-11-07T08:42:04.280433Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01449131965637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__domain_name_organization_id.a2b5ff8fd3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__domain_name\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.277407Z", "completed_at": "2023-11-07T08:42:04.281773Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.282985Z", "completed_at": "2023-11-07T08:42:04.282989Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012033939361572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__brand_brand_id.a2419e1741", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect brand_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__brand\nwhere brand_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.283230Z", "completed_at": "2023-11-07T08:42:04.289374Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.298823Z", "completed_at": "2023-11-07T08:42:04.298831Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017750978469848633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__brand_brand_id.fdf8e23c9e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    brand_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__brand\nwhere brand_id is not null\ngroup by brand_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.289711Z", "completed_at": "2023-11-07T08:42:04.299167Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.300651Z", "completed_at": "2023-11-07T08:42:04.300657Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012819766998291016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__group_group_id.7659ed83ec", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect group_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__group\nwhere group_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.302482Z", "completed_at": "2023-11-07T08:42:04.308667Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.309584Z", "completed_at": "2023-11-07T08:42:04.309589Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009276151657104492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__group_group_id.f0658dabcd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    group_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__group\nwhere group_id is not null\ngroup by group_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.306058Z", "completed_at": "2023-11-07T08:42:04.309268Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.310555Z", "completed_at": "2023-11-07T08:42:04.310558Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006075143814086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__organization_organization_id.de7b98c06a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect organization_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization\nwhere organization_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.313113Z", "completed_at": "2023-11-07T08:42:04.319513Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.320098Z", "completed_at": "2023-11-07T08:42:04.320104Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008882999420166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__organization_organization_id.152be1ab31", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    organization_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__organization\nwhere organization_id is not null\ngroup by organization_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.316953Z", "completed_at": "2023-11-07T08:42:04.320866Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.322091Z", "completed_at": "2023-11-07T08:42:04.322098Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.010101079940795898, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__schedule_holiday_holiday_id.52eb08f782", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect holiday_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_holiday\nwhere holiday_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.323125Z", "completed_at": "2023-11-07T08:42:04.326750Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.329959Z", "completed_at": "2023-11-07T08:42:04.329964Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008742094039916992, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__schedule_holiday_holiday_id.0341d5635a", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    holiday_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__schedule_holiday\nwhere holiday_id is not null\ngroup by holiday_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.327055Z", "completed_at": "2023-11-07T08:42:04.330776Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.332033Z", "completed_at": "2023-11-07T08:42:04.332037Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.00664210319519043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_comment_ticket_comment_id.b821f4a606", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_comment_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_comment\nwhere ticket_comment_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.333007Z", "completed_at": "2023-11-07T08:42:04.336495Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.339859Z", "completed_at": "2023-11-07T08:42:04.339864Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008690834045410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_comment_ticket_comment_id.ba353330cd", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ticket_comment_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_comment\nwhere ticket_comment_id is not null\ngroup by ticket_comment_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.336788Z", "completed_at": "2023-11-07T08:42:04.340591Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.341883Z", "completed_at": "2023-11-07T08:42:04.341889Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006752967834472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_form_history_ticket_form_id.1afe781a17", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_form_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket_form_history\nwhere ticket_form_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.342902Z", "completed_at": "2023-11-07T08:42:04.347693Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.350695Z", "completed_at": "2023-11-07T08:42:04.350702Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00972294807434082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__ticket_ticket_id.a8229e6981", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ticket_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket\nwhere ticket_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.348001Z", "completed_at": "2023-11-07T08:42:04.351633Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.352101Z", "completed_at": "2023-11-07T08:42:04.352104Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005429983139038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__ticket_ticket_id.4be7124521", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    ticket_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__ticket\nwhere ticket_id is not null\ngroup by ticket_id\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.052375Z", "completed_at": "2023-11-07T08:42:04.731320Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.732119Z", "completed_at": "2023-11-07T08:42:04.732132Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.833057165145874, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__time_zone", "compiled": true, "compiled_code": "--To disable this model, set the using_schedules variable within your dbt_project.yml file to False.\n\n\nwith base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__time_zone_tmp\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    standard_offset\n    \n as \n    \n    standard_offset\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        standard_offset,\n        time_zone,\n        -- the standard_offset is a string written as [+/-]HH:MM\n        -- let's convert it to an integer value of minutes\n        cast( \n\n    split_part(\n        standard_offset,\n        ':',\n        1\n        )\n\n as integer ) * 60 +\n            (cast( \n\n    split_part(\n        standard_offset,\n        ':',\n        2\n        )\n\n as integer ) *\n                (case when standard_offset like '-%' then -1 else 1 end) ) as standard_offset_minutes\n    \n    from fields\n)\n\nselect * from final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__time_zone"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.887773Z", "completed_at": "2023-11-07T08:42:04.896575Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.897783Z", "completed_at": "2023-11-07T08:42:04.897788Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012557029724121094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__time_zone_time_zone.b25b3452b1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect time_zone\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__time_zone\nwhere time_zone is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.892127Z", "completed_at": "2023-11-07T08:42:04.896894Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.898108Z", "completed_at": "2023-11-07T08:42:04.898115Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01265716552734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__time_zone_time_zone.67995adbaf", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    time_zone as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__time_zone\nwhere time_zone is not null\ngroup by time_zone\nhaving count(*) > 1\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.100894Z", "completed_at": "2023-11-07T08:42:04.754108Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.754725Z", "completed_at": "2023-11-07T08:42:04.754735Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.8330812454223633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.zendesk_source.stg_zendesk__user", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user_tmp\n\n),\n\nfields as (\n\n    select\n        /*\n        The below macro is used to generate the correct SQL for package staging models. It takes a list of columns \n        that are expected/needed (staging_columns from dbt_zendesk_source/models/tmp/) and compares it with columns \n        in the source (source_columns from dbt_zendesk_source/macros/).\n        For more information refer to our dbt_fivetran_utils documentation (https://github.com/fivetran/dbt_fivetran_utils.git).\n        */\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as \n    \n    active\n    \n, \n    \n    \n    alias\n    \n as \n    \n    alias\n    \n, \n    \n    \n    authenticity_token\n    \n as \n    \n    authenticity_token\n    \n, \n    \n    \n    chat_only\n    \n as \n    \n    chat_only\n    \n, \n    \n    \n    created_at\n    \n as \n    \n    created_at\n    \n, \n    \n    \n    details\n    \n as \n    \n    details\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    external_id\n    \n as \n    \n    external_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_login_at\n    \n as \n    \n    last_login_at\n    \n, \n    \n    \n    locale\n    \n as \n    \n    locale\n    \n, \n    \n    \n    locale_id\n    \n as \n    \n    locale_id\n    \n, \n    \n    \n    moderator\n    \n as \n    \n    moderator\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    notes\n    \n as \n    \n    notes\n    \n, \n    \n    \n    only_private_comments\n    \n as \n    \n    only_private_comments\n    \n, \n    \n    \n    organization_id\n    \n as \n    \n    organization_id\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    remote_photo_url\n    \n as \n    \n    remote_photo_url\n    \n, \n    \n    \n    restricted_agent\n    \n as \n    \n    restricted_agent\n    \n, \n    \n    \n    role\n    \n as \n    \n    role\n    \n, \n    \n    \n    shared\n    \n as \n    \n    shared\n    \n, \n    \n    \n    shared_agent\n    \n as \n    \n    shared_agent\n    \n, \n    \n    \n    signature\n    \n as \n    \n    signature\n    \n, \n    \n    \n    suspended\n    \n as \n    \n    suspended\n    \n, \n    \n    \n    ticket_restriction\n    \n as \n    \n    ticket_restriction\n    \n, \n    \n    \n    time_zone\n    \n as \n    \n    time_zone\n    \n, \n    \n    \n    two_factor_auth_enabled\n    \n as \n    \n    two_factor_auth_enabled\n    \n, \n    \n    \n    updated_at\n    \n as \n    \n    updated_at\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n, \n    \n    \n    verified\n    \n as \n    \n    verified\n    \n\n\n\n        \n    from base\n),\n\nfinal as ( \n    \n    select \n        id as user_id,\n        external_id,\n        _fivetran_synced,\n        last_login_at,\n            created_at,\n            updated_at,\n        \n        email,\n        name,\n        organization_id,\n        role,\n        ticket_restriction,\n        time_zone,\n        locale,\n        active as is_active,\n        suspended as is_suspended\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.930106Z", "completed_at": "2023-11-07T08:42:04.937295Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.938530Z", "completed_at": "2023-11-07T08:42:04.938535Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010822772979736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.not_null_stg_zendesk__user_user_id.102d572926", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect user_id\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user\nwhere user_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2023-11-07T08:42:04.933811Z", "completed_at": "2023-11-07T08:42:04.937585Z"}, {"name": "execute", "started_at": "2023-11-07T08:42:04.938836Z", "completed_at": "2023-11-07T08:42:04.938839Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.010960102081298828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.zendesk_source.unique_stg_zendesk__user_user_id.3d3e346b11", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    user_id as unique_field,\n    count(*) as n_records\n\nfrom DBT_PACKAGE_TESTING.zendesk_source_integrations_tests_4_zendesk_source.stg_zendesk__user\nwhere user_id is not null\ngroup by user_id\nhaving count(*) > 1\n\n\n", "relation_name": null}], "elapsed_time": 8.13686990737915, "args": {"partial_parse": true, "log_level": "info", "which": "generate", "print": true, "exclude": [], "log_format_file": "debug", "select": [], "partial_parse_file_diff": true, "static_parser": true, "version_check": true, "project_dir": "/Users/avinash.kunnath/Documents/dbt_packages/zendesk/dbt_zendesk_source/integration_tests", "use_colors": true, "invocation_command": "dbt docs generate -t snowflake", "warn_error_options": {"include": [], "exclude": []}, "enable_legacy_logger": false, "target": "snowflake", "log_path": "/Users/avinash.kunnath/Documents/dbt_packages/zendesk/dbt_zendesk_source/integration_tests/logs", "strict_mode": false, "log_format": "default", "printer_width": 80, "favor_state": false, "show_resource_report": false, "cache_selected_only": false, "empty_catalog": false, "static": false, "compile": true, "defer": false, "profiles_dir": "/Users/avinash.kunnath/.dbt", "macro_debugging": false, "populate_cache": true, "use_colors_file": true, "log_file_max_bytes": 10485760, "send_anonymous_usage_stats": true, "write_json": true, "vars": {}, "log_level_file": "debug", "introspect": true, "indirect_selection": "eager", "quiet": false}}